architecture:
  version: 0.3
  subtree:                           # "subtree" contains abstract hierarchies
    - name: system_arch              # name of the design
      attributes:                    # shared attributes that will propagate down all lower levels
        technology: 32nm
        latency: 1ns
      local:
        - name: DRAM                 # offchip DRAM is the source of all datatypes
          class: DRAM                # assume DRAM is large enough to store all the data, so no depth specification needed
          attributes:
            width: 64                # width in bits
            datawidth: 16            # datawidth in bits
            block-size: 4
      subtree:
        - name: chip                 # all components below this level are on-chip components
          local:
            - name: shared_glb
              class: smartbuffer_SRAM
              attributes:
                memory_depth: 16384
                memory_width: 64
                n_banks: 32
                n_rdwr_ports: 2
            - name: dummy_buffer
              class: dummy_storage
              attributes:
                depth: 0   # will result in zero area/energy for accelergy
                width: 16  # timeloop needs a width even if the memory is not storing anything
            - name: D2A_NoC
              class: SimpleMulticast         # timeloop class
              subclass: DAC_SimpleMulticast  # accelergy class
              attributes:
                datawidth: 16
                DAC_datawidth: 1  # DAC only converts one bit per cycle
                n_DAC_cycles: 16  # number of cycles needed for a DAC to convert a datawidth-bit data
                n_PE_cols: 16
                n_PE_rows: 16
            - name: A2D_NoC
              class: SimpleMulticast         # timeloop class
              subclass: ADC_SimpleMulticast  # accelergy class
              attributes:
                datawidth: 16
                ADC_datawidth: 8
                cell_datawidth: 2
                n_DAC_cycles: 16    # number of cycles needed for a DAC to convert a datawidth-bit data = datawidth/DAC_datawidth
                n_PE_cols: 128
                n_PE_rows: 128
          subtree:
            - name: PE[0..16383]
              local:                 # "local" contains physical instantiations
                - name: scratchpad
                  class: memcell_storage  # definitions of the compound classes can be found under "components" folder
                  attributes:
                    width: 16       # width in bits
                    depth: 1
                - name: mac
                  class: memcell_compute
                  attributes:
                    datawidth: 16   # datawidth in bits