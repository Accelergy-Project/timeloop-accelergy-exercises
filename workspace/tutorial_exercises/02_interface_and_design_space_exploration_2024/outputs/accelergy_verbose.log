2024-05-29 17:03:01 INFO            _                _                      
2024-05-29 17:03:01 INFO           / \   ___ ___ ___| | ___ _ __ __ _ _   _ 
2024-05-29 17:03:01 INFO          / _ \ / __/ __/ _ \ |/ _ \ '__/ _` | | | |
2024-05-29 17:03:01 INFO         / ___ \ (_| (_|  __/ |  __/ | | (_| | |_| |
2024-05-29 17:03:01 INFO        /_/   \_\___\___\___|_|\___|_|  \__, |\__, |
2024-05-29 17:03:01 INFO                                        |___/ |___/ 
2024-05-29 17:03:01 INFO        generating outputs according to the following specified output flags... 
2024-05-29 17:03:01 INFO         Please use the -f flag to update the preference (default to all output files)
2024-05-29 17:03:01 INFO        {'ERT': 1, 'ERT_summary': 1, 'ART': 1, 'ART_summary': 1, 'energy_estimation': 1, 'flattened_arch': 1}
2024-05-29 17:03:01 INFO        Located config file at /home/tanner/.config/accelergy/accelergy_config.yaml.
2024-05-29 17:03:01 INFO        config file located:
2024-05-29 17:03:01 INFO        /home/tanner/.config/accelergy/accelergy_config.yaml
2024-05-29 17:03:01 WARNING     File /home/tanner/.config/accelergy/accelergy_config.yaml is outdated. File version is 0.3, while the latest version is 0.4. 
2024-05-29 17:03:01 WARNING      Please update the file to the latest version.
2024-05-29 17:03:01 INFO        Parsing file /home/tanner/research/cimloop/infrastructure/timeloop-accelergy-exercises/workspace/tutorial_exercises/02_interface_and_design_space_exploration_2024/outputs/parsed-processed-input.yaml for architecture info
2024-05-29 17:03:01 INFO        Parsing file /home/tanner/research/cimloop/infrastructure/timeloop-accelergy-exercises/workspace/tutorial_exercises/02_interface_and_design_space_exploration_2024/outputs/parsed-processed-input.yaml for compound_components info
2024-05-29 17:03:01 INFO        Adding required action "leak" to class DRAM
2024-05-29 17:03:01 INFO        Adding required action "read" to class DRAM
2024-05-29 17:03:01 INFO        Adding required action "update" to class DRAM
2024-05-29 17:03:01 INFO        Adding required action "write" to class DRAM
2024-05-29 17:03:01 INFO        Adding required action "leak" to class SRAM
2024-05-29 17:03:01 INFO        Adding required action "read" to class SRAM
2024-05-29 17:03:01 INFO        Adding required action "update" to class SRAM
2024-05-29 17:03:01 INFO        Adding required action "write" to class SRAM
2024-05-29 17:03:01 INFO        Estimator plug-in identified by: /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-table-based-plug-ins/table.estimator.yaml
2024-05-29 17:03:01 INFO        Estimator plug-in identified by: /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-aladdin-plug-in/aladdin.estimator.yaml
2024-05-29 17:03:01 INFO        Estimator plug-in identified by: /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/dummy_tables/dummy.estimator.yaml
2024-05-29 17:03:01 INFO        Estimator plug-in identified by: /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti.estimator.yaml
2024-05-29 17:03:01 INFO        Estimator plug-in identified by: /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-neurosim-plugin/neurosim.estimator.yaml
2024-05-29 17:03:01 INFO        Estimator plug-in identified by: /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-library-plugin/library.estimator.yaml
2024-05-29 17:03:01 INFO        Estimator plug-in identified by: /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-adc-plug-in/adc.estimator.yaml
2024-05-29 17:03:01 INFO        Getting all estimators in module <module 'python_plug_in' from '/home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_wrapper.py'>
2024-05-29 17:03:01 INFO        Added estimator CactiCache that estimates cache with actions idle, read, read_access, update, update_access, write, write_access, leak
2024-05-29 17:03:01 INFO        Added estimator CactiDRAM that estimates DRAM with actions idle, read, update, write, leak
2024-05-29 17:03:01 INFO        Added estimator CactiSRAM that estimates SRAM with actions idle, read, update, write, leak
2024-05-29 17:03:01 INFO        Found estimator plug-in: DEPRECATED table-based-plug-ins. Use the Library plug-in instead. (<SetsOfTables.SetsOfTables object at 0x7fd275b4d070>)
2024-05-29 17:03:01 INFO        Found estimator plug-in: Aladdin_table (<AladdinTable.AladdinTable object at 0x7fd275912180>)
2024-05-29 17:03:01 INFO        Found estimator plug-in: dummy_table (<DummyTable.DummyTable object at 0x7fd275b1f860>)
2024-05-29 17:03:01 INFO        Found estimator plug-in: Neurosim Plug-In (<NeuroWrapper.NeuroWrapper object at 0x7fd275911f10>)
2024-05-29 17:03:01 INFO        Found estimator plug-in: Library (<LibraryEstimator.LibraryEstimator object at 0x7fd275b4c9e0>)
2024-05-29 17:03:01 INFO        Found estimator plug-in: ADC Plug-In (<ADCEstimator.ADCEstimator object at 0x7fd2759b26c0>)
2024-05-29 17:03:01 INFO        Found estimator plug-in: CactiCache (<accelergy.plug_in_interface.estimator_wrapper.EstimatorWrapper object at 0x7fd275b3ec90>)
2024-05-29 17:03:01 INFO        Found estimator plug-in: CactiDRAM (<accelergy.plug_in_interface.estimator_wrapper.EstimatorWrapper object at 0x7fd275b4d970>)
2024-05-29 17:03:01 INFO        Found estimator plug-in: CactiSRAM (<accelergy.plug_in_interface.estimator_wrapper.EstimatorWrapper object at 0x7fd275ca7a10>)
2024-05-29 17:03:01 INFO        
2024-05-29 17:03:01 INFO        Components in the architecture:
2024-05-29 17:03:01 INFO        	Primitive Components:
2024-05-29 17:03:01 INFO        		DRAM
2024-05-29 17:03:01 INFO        		SRAM
2024-05-29 17:03:01 INFO        		dummy_storage
2024-05-29 17:03:01 INFO        	Compound Components:
2024-05-29 17:03:01 INFO        		intmac
2024-05-29 17:03:01 INFO        		register
2024-05-29 17:03:01 INFO        
2024-05-29 17:03:01 INFO        Supported Components:
2024-05-29 17:03:01 INFO        	_anything_(set 'technology=-1' to use the dummy table) <dummy_table plug-in> 
2024-05-29 17:03:01 INFO        		_anything_._anything_()
2024-05-29 17:03:01 INFO        	adc(resolution, technology, throughput, n_adcs) <ADC Plug-In plug-in> 
2024-05-29 17:03:01 INFO        		adc.convert()
2024-05-29 17:03:01 INFO        		adc.drive()
2024-05-29 17:03:01 INFO        		adc.read()
2024-05-29 17:03:01 INFO        		adc.sample()
2024-05-29 17:03:01 INFO        		adc.leak()
2024-05-29 17:03:01 INFO        		adc.activate()
2024-05-29 17:03:01 INFO        	aladdin_adder(technology=45nm, global_cycle_seconds=1e-9, width|datawidth=32, energy=0.21, area=2.78E+02, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		aladdin_adder.add()
2024-05-29 17:03:01 INFO        		aladdin_adder.read()
2024-05-29 17:03:01 INFO        	aladdin_adder(technology=45nm, global_cycle_seconds=1e-9, width|datawidth=32, energy=0.0024, area=2.78E+02, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		aladdin_adder.leak()
2024-05-29 17:03:01 INFO        	aladdin_adder(technology=45nm, global_cycle_seconds=1e-9, width|datawidth=32, energy=0, area=2.78E+02, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		aladdin_adder.update()
2024-05-29 17:03:01 INFO        		aladdin_adder.write()
2024-05-29 17:03:01 INFO        	aladdin_comparator(technology=45nm, global_cycle_seconds=1e-9, width|datawidth=32, energy(pJ)=0.02947, area(um^2)=71, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		aladdin_comparator.compare()
2024-05-29 17:03:01 INFO        		aladdin_comparator.read()
2024-05-29 17:03:01 INFO        	aladdin_comparator(technology=45nm, global_cycle_seconds=1e-9, width|datawidth=32, energy(pJ)=2.51E-05, area(um^2)=71, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		aladdin_comparator.leak()
2024-05-29 17:03:01 INFO        	aladdin_comparator(technology=45nm, global_cycle_seconds=1e-9, width|datawidth=32, energy(pJ)=0, area(um^2)=71, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		aladdin_comparator.update()
2024-05-29 17:03:01 INFO        		aladdin_comparator.write()
2024-05-29 17:03:01 INFO        	aladdin_counter(technology=45nm, global_cycle_seconds=1e-9, width|datawidth=32, energy(pJ)=0.25074, area(um^2)=495.5, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		aladdin_counter.count()
2024-05-29 17:03:01 INFO        		aladdin_counter.read()
2024-05-29 17:03:01 INFO        	aladdin_counter(technology=45nm, global_cycle_seconds=1e-9, width|datawidth=32, energy(pJ)=0.0003213, area(um^2)=495.5, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		aladdin_counter.leak()
2024-05-29 17:03:01 INFO        	aladdin_counter(technology=45nm, global_cycle_seconds=1e-9, width|datawidth=32, energy(pJ)=0, area(um^2)=495.5, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		aladdin_counter.update()
2024-05-29 17:03:01 INFO        		aladdin_counter.write()
2024-05-29 17:03:01 INFO        	aladdin_multiplier(technology=45nm, global_cycle_seconds=1e-9, width|datawidth=32, width_a|datawidth_a=32, width_b|datawidth_b=32, energy(pJ)=12.68, area(um^2)=6350, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		aladdin_multiplier.multiply()
2024-05-29 17:03:01 INFO        		aladdin_multiplier.read()
2024-05-29 17:03:01 INFO        	aladdin_multiplier(technology=45nm, global_cycle_seconds=1e-9, width|datawidth=32, width_a|datawidth_a=32, width_b|datawidth_b=32, energy(pJ)=0.08, area(um^2)=6350, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		aladdin_multiplier.leak()
2024-05-29 17:03:01 INFO        	aladdin_multiplier(technology=45nm, global_cycle_seconds=1e-9, width|datawidth=32, width_a|datawidth_a=32, width_b|datawidth_b=32, energy(pJ)=0, area(um^2)=6350, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		aladdin_multiplier.update()
2024-05-29 17:03:01 INFO        		aladdin_multiplier.write()
2024-05-29 17:03:01 INFO        	aladdin_register(technology=45nm, global_cycle_seconds=1e-9, width|datawidth=1, dynamic energy(pJ)=0.009, area(um^2)=5.98E+00, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		aladdin_register.read()
2024-05-29 17:03:01 INFO        	aladdin_register(technology=45nm, global_cycle_seconds=1e-9, width|datawidth=1, dynamic energy(pJ)=0, area(um^2)=5.98E+00, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		aladdin_register.write()
2024-05-29 17:03:01 INFO        	aladdin_register(technology=45nm, global_cycle_seconds=1e-9, width|datawidth=1, dynamic energy(pJ)=0, area(um^2)=5.98E+00, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		aladdin_register.leak()
2024-05-29 17:03:01 INFO        		aladdin_register.update()
2024-05-29 17:03:01 INFO        	array_adc(rows=32, cols=32, cols_active_at_once=8, cell_config=placeholder, average_input_value=1, average_cell_value=1, sequential=False, adc_resolution=0, read_pulse_width=1e-08, voltage_dac_bits=1, temporal_dac_bits=1, temporal_spiking=False, voltage=0, threshold_voltage=0, global_cycle_seconds=1e-09, technology=32) <Neurosim Plug-In plug-in> 
2024-05-29 17:03:01 INFO        		array_adc.read()
2024-05-29 17:03:01 INFO        		array_adc.mac_random()
2024-05-29 17:03:01 INFO        		array_adc.mac_reused()
2024-05-29 17:03:01 INFO        		array_adc.compute()
2024-05-29 17:03:01 INFO        		array_adc.add()
2024-05-29 17:03:01 INFO        		array_adc.shift_add()
2024-05-29 17:03:01 INFO        		array_adc.convert()
2024-05-29 17:03:01 INFO        		array_adc.write()
2024-05-29 17:03:01 INFO        		array_adc.set()
2024-05-29 17:03:01 INFO        		array_adc.erase()
2024-05-29 17:03:01 INFO        		array_adc.update()
2024-05-29 17:03:01 INFO        		array_adc.leak()
2024-05-29 17:03:01 INFO        	array_adc: alias for ADC Plug-In plug-in adc
2024-05-29 17:03:01 INFO        	array_col_drivers(rows=32, cols=32, cols_active_at_once=8, cell_config=placeholder, average_input_value=1, average_cell_value=1, sequential=False, adc_resolution=0, read_pulse_width=1e-08, voltage_dac_bits=1, temporal_dac_bits=1, temporal_spiking=False, voltage=0, threshold_voltage=0, global_cycle_seconds=1e-09, technology=32) <Neurosim Plug-In plug-in> 
2024-05-29 17:03:01 INFO        		array_col_drivers.read()
2024-05-29 17:03:01 INFO        		array_col_drivers.mac_random()
2024-05-29 17:03:01 INFO        		array_col_drivers.mac_reused()
2024-05-29 17:03:01 INFO        		array_col_drivers.compute()
2024-05-29 17:03:01 INFO        		array_col_drivers.add()
2024-05-29 17:03:01 INFO        		array_col_drivers.shift_add()
2024-05-29 17:03:01 INFO        		array_col_drivers.convert()
2024-05-29 17:03:01 INFO        		array_col_drivers.write()
2024-05-29 17:03:01 INFO        		array_col_drivers.set()
2024-05-29 17:03:01 INFO        		array_col_drivers.erase()
2024-05-29 17:03:01 INFO        		array_col_drivers.update()
2024-05-29 17:03:01 INFO        		array_col_drivers.leak()
2024-05-29 17:03:01 INFO        	array_row_drivers(rows=32, cols=32, cols_active_at_once=8, cell_config=placeholder, average_input_value=1, average_cell_value=1, sequential=False, adc_resolution=0, read_pulse_width=1e-08, voltage_dac_bits=1, temporal_dac_bits=1, temporal_spiking=False, voltage=0, threshold_voltage=0, global_cycle_seconds=1e-09, technology=32) <Neurosim Plug-In plug-in> 
2024-05-29 17:03:01 INFO        		array_row_drivers.read()
2024-05-29 17:03:01 INFO        		array_row_drivers.mac_random()
2024-05-29 17:03:01 INFO        		array_row_drivers.mac_reused()
2024-05-29 17:03:01 INFO        		array_row_drivers.compute()
2024-05-29 17:03:01 INFO        		array_row_drivers.add()
2024-05-29 17:03:01 INFO        		array_row_drivers.shift_add()
2024-05-29 17:03:01 INFO        		array_row_drivers.convert()
2024-05-29 17:03:01 INFO        		array_row_drivers.write()
2024-05-29 17:03:01 INFO        		array_row_drivers.set()
2024-05-29 17:03:01 INFO        		array_row_drivers.erase()
2024-05-29 17:03:01 INFO        		array_row_drivers.update()
2024-05-29 17:03:01 INFO        		array_row_drivers.leak()
2024-05-29 17:03:01 INFO        	atomlayer_input_buffer_transfers(technology=32nm, global_cycle_seconds=1e-9, width|datawidth=16, depth=128, energy=6.46, area=2100, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		atomlayer_input_buffer_transfers.read()
2024-05-29 17:03:01 INFO        	atomlayer_input_buffer_transfers(technology=32nm, global_cycle_seconds=1e-9, width|datawidth=16, depth=128, energy=0, area=2100, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		atomlayer_input_buffer_transfers.write()
2024-05-29 17:03:01 INFO        		atomlayer_input_buffer_transfers.update()
2024-05-29 17:03:01 INFO        		atomlayer_input_buffer_transfers.leak()
2024-05-29 17:03:01 INFO        	atomlayer_register_ladder(technology=32nm, global_cycle_seconds=1e-9, width|datawidth=16, depth=128, energy=0.083, area=1620, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		atomlayer_register_ladder.read()
2024-05-29 17:03:01 INFO        		atomlayer_register_ladder.write()
2024-05-29 17:03:01 INFO        	atomlayer_register_ladder(technology=32nm, global_cycle_seconds=1e-9, width|datawidth=16, depth=128, energy=0, area=1620, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		atomlayer_register_ladder.update()
2024-05-29 17:03:01 INFO        		atomlayer_register_ladder.leak()
2024-05-29 17:03:01 INFO        	bitwise(technology, global_cycle_seconds, width) <Aladdin_table plug-in> 
2024-05-29 17:03:01 INFO        		bitwise.leak()
2024-05-29 17:03:01 INFO        		bitwise.access()
2024-05-29 17:03:01 INFO        	brahms_dac(technology=40nm, global_cycle_seconds=1e-9, resolution=8, energy=0.291, area=438, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		brahms_dac.read()
2024-05-29 17:03:01 INFO        		brahms_dac.convert()
2024-05-29 17:03:01 INFO        	brahms_dac(technology=40nm, global_cycle_seconds=1e-9, resolution=8, energy=0, area=438, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		brahms_dac.update()
2024-05-29 17:03:01 INFO        		brahms_dac.write()
2024-05-29 17:03:01 INFO        		brahms_dac.leak()
2024-05-29 17:03:01 INFO        	cache(technology, width, depth, n_rw_ports=1, n_banks=1, associativity=1, tag_size=None) <CactiCache plug-in> 
2024-05-29 17:03:01 INFO        		cache.idle()
2024-05-29 17:03:01 INFO        		cache.read(address_delta=True, data_delta=True)
2024-05-29 17:03:01 INFO        		cache.read_access(address_delta=True, data_delta=True)
2024-05-29 17:03:01 INFO        		cache.update(address_delta=True, data_delta=True)
2024-05-29 17:03:01 INFO        		cache.update_access(address_delta=True, data_delta=True)
2024-05-29 17:03:01 INFO        		cache.write(address_delta=True, data_delta=True)
2024-05-29 17:03:01 INFO        		cache.write_access(address_delta=True, data_delta=True)
2024-05-29 17:03:01 INFO        		cache.leak(global_cycle_seconds)
2024-05-29 17:03:01 INFO        	cim_adc: alias for ADC Plug-In plug-in adc
2024-05-29 17:03:01 INFO        	cim_array_adc: alias for ADC Plug-In plug-in adc
2024-05-29 17:03:01 INFO        	comparator(technology, global_cycle_seconds, width) <Aladdin_table plug-in> 
2024-05-29 17:03:01 INFO        		comparator.leak()
2024-05-29 17:03:01 INFO        		comparator.access()
2024-05-29 17:03:01 INFO        	counter(technology, global_cycle_seconds, width) <Aladdin_table plug-in> 
2024-05-29 17:03:01 INFO        		counter.leak()
2024-05-29 17:03:01 INFO        		counter.access()
2024-05-29 17:03:01 INFO        	crossbar(technology, global_cycle_seconds, n_inputs, n_outputs, width) <Aladdin_table plug-in> 
2024-05-29 17:03:01 INFO        		crossbar.leak()
2024-05-29 17:03:01 INFO        		crossbar.access()
2024-05-29 17:03:01 INFO        	DRAM(width, type=LPDDR4) <CactiDRAM plug-in> 
2024-05-29 17:03:01 INFO        		DRAM.idle()
2024-05-29 17:03:01 INFO        		DRAM.read()
2024-05-29 17:03:01 INFO        		DRAM.update()
2024-05-29 17:03:01 INFO        		DRAM.write()
2024-05-29 17:03:01 INFO        		DRAM.leak(global_cycle_seconds)
2024-05-29 17:03:01 INFO        	dummy_compute(global_cycle_seconds=1e-9, energy=0, area=0, n_instances=1, area_scale=1, energy_scale=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		dummy_compute.read()
2024-05-29 17:03:01 INFO        		dummy_compute.update()
2024-05-29 17:03:01 INFO        		dummy_compute.leak()
2024-05-29 17:03:01 INFO        		dummy_compute.write()
2024-05-29 17:03:01 INFO        		dummy_compute.*()
2024-05-29 17:03:01 INFO        	dummy_storage(global_cycle_seconds=1e-9, energy=0, area=0, n_instances=1, area_scale=1, energy_scale=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		dummy_storage.read()
2024-05-29 17:03:01 INFO        		dummy_storage.update()
2024-05-29 17:03:01 INFO        		dummy_storage.leak()
2024-05-29 17:03:01 INFO        		dummy_storage.write()
2024-05-29 17:03:01 INFO        		dummy_storage.*()
2024-05-29 17:03:01 INFO        	FIFO(technology, global_cycle_seconds, width, depth) <Aladdin_table plug-in> 
2024-05-29 17:03:01 INFO        		FIFO.leak()
2024-05-29 17:03:01 INFO        		FIFO.access()
2024-05-29 17:03:01 INFO        	flip_flop(n_bits=8, global_cycle_seconds=1e-09, technology=32) <Neurosim Plug-In plug-in> 
2024-05-29 17:03:01 INFO        		flip_flop.read()
2024-05-29 17:03:01 INFO        		flip_flop.mac_random()
2024-05-29 17:03:01 INFO        		flip_flop.mac_reused()
2024-05-29 17:03:01 INFO        		flip_flop.compute()
2024-05-29 17:03:01 INFO        		flip_flop.add()
2024-05-29 17:03:01 INFO        		flip_flop.shift_add()
2024-05-29 17:03:01 INFO        		flip_flop.convert()
2024-05-29 17:03:01 INFO        		flip_flop.write()
2024-05-29 17:03:01 INFO        		flip_flop.set()
2024-05-29 17:03:01 INFO        		flip_flop.erase()
2024-05-29 17:03:01 INFO        		flip_flop.update()
2024-05-29 17:03:01 INFO        		flip_flop.leak()
2024-05-29 17:03:01 INFO        	forms_adc(technology=32nm, global_cycle_seconds=1e-9, resolution=4, energy=0.22619, area=284.375, n_instances=1, area_scale=1, energy_scale=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		forms_adc.convert()
2024-05-29 17:03:01 INFO        		forms_adc.read()
2024-05-29 17:03:01 INFO        	forms_adc(technology=32nm, global_cycle_seconds=1e-9, resolution=4, energy=0, area=284.375, n_instances=1, area_scale=1, energy_scale=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		forms_adc.update()
2024-05-29 17:03:01 INFO        		forms_adc.write()
2024-05-29 17:03:01 INFO        		forms_adc.leak()
2024-05-29 17:03:01 INFO        	fpadder(technology, global_cycle_seconds, exponent, mantissa) <Aladdin_table plug-in> 
2024-05-29 17:03:01 INFO        		fpadder.leak()
2024-05-29 17:03:01 INFO        		fpadder.access()
2024-05-29 17:03:01 INFO        	fpmac(technology, global_cycle_seconds, exponent, mantissa) <Aladdin_table plug-in> 
2024-05-29 17:03:01 INFO        		fpmac.leak()
2024-05-29 17:03:01 INFO        		fpmac.access()
2024-05-29 17:03:01 INFO        	fpmultiplier(technology, global_cycle_seconds, exponent, mantissa) <Aladdin_table plug-in> 
2024-05-29 17:03:01 INFO        		fpmultiplier.leak()
2024-05-29 17:03:01 INFO        		fpmultiplier.access()
2024-05-29 17:03:01 INFO        	intadder(technology, global_cycle_seconds, width) <Aladdin_table plug-in> 
2024-05-29 17:03:01 INFO        		intadder.leak()
2024-05-29 17:03:01 INFO        		intadder.access()
2024-05-29 17:03:01 INFO        	intadder(n_bits=8, global_cycle_seconds=1e-09, technology=32) <Neurosim Plug-In plug-in> 
2024-05-29 17:03:01 INFO        		intadder.read()
2024-05-29 17:03:01 INFO        		intadder.mac_random()
2024-05-29 17:03:01 INFO        		intadder.mac_reused()
2024-05-29 17:03:01 INFO        		intadder.compute()
2024-05-29 17:03:01 INFO        		intadder.add()
2024-05-29 17:03:01 INFO        		intadder.shift_add()
2024-05-29 17:03:01 INFO        		intadder.convert()
2024-05-29 17:03:01 INFO        		intadder.write()
2024-05-29 17:03:01 INFO        		intadder.set()
2024-05-29 17:03:01 INFO        		intadder.erase()
2024-05-29 17:03:01 INFO        		intadder.update()
2024-05-29 17:03:01 INFO        		intadder.leak()
2024-05-29 17:03:01 INFO        	intadder_tree(n_bits=8, n_adder_tree_inputs=2, global_cycle_seconds=1e-09, technology=32) <Neurosim Plug-In plug-in> 
2024-05-29 17:03:01 INFO        		intadder_tree.read()
2024-05-29 17:03:01 INFO        		intadder_tree.mac_random()
2024-05-29 17:03:01 INFO        		intadder_tree.mac_reused()
2024-05-29 17:03:01 INFO        		intadder_tree.compute()
2024-05-29 17:03:01 INFO        		intadder_tree.add()
2024-05-29 17:03:01 INFO        		intadder_tree.shift_add()
2024-05-29 17:03:01 INFO        		intadder_tree.convert()
2024-05-29 17:03:01 INFO        		intadder_tree.write()
2024-05-29 17:03:01 INFO        		intadder_tree.set()
2024-05-29 17:03:01 INFO        		intadder_tree.erase()
2024-05-29 17:03:01 INFO        		intadder_tree.update()
2024-05-29 17:03:01 INFO        		intadder_tree.leak()
2024-05-29 17:03:01 INFO        	intmac(technology, global_cycle_seconds, width) <Aladdin_table plug-in> 
2024-05-29 17:03:01 INFO        		intmac.leak()
2024-05-29 17:03:01 INFO        		intmac.access()
2024-05-29 17:03:01 INFO        	intmultiplier(technology, global_cycle_seconds, width) <Aladdin_table plug-in> 
2024-05-29 17:03:01 INFO        		intmultiplier.leak()
2024-05-29 17:03:01 INFO        		intmultiplier.access()
2024-05-29 17:03:01 INFO        	isaac_adc(technology=32nm, global_cycle_seconds=1e-9, resolution=8, energy=1.666666667, area=1200, n_instances=1, area_scale=1, energy_scale=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		isaac_adc.convert()
2024-05-29 17:03:01 INFO        		isaac_adc.read()
2024-05-29 17:03:01 INFO        	isaac_adc(technology=32nm, global_cycle_seconds=1e-9, resolution=8, energy=0, area=1200, n_instances=1, area_scale=1, energy_scale=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		isaac_adc.leak()
2024-05-29 17:03:01 INFO        		isaac_adc.update()
2024-05-29 17:03:01 INFO        		isaac_adc.write()
2024-05-29 17:03:01 INFO        	isaac_adc(technology=32nm, global_cycle_seconds=1e-9, resolution=4, energy=0.79, area=361.04, n_instances=1, area_scale=1, energy_scale=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		isaac_adc.convert()
2024-05-29 17:03:01 INFO        		isaac_adc.read()
2024-05-29 17:03:01 INFO        	isaac_adc(technology=32nm, global_cycle_seconds=1e-9, resolution=5, energy=0.99, area=476.91, n_instances=1, area_scale=1, energy_scale=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		isaac_adc.convert()
2024-05-29 17:03:01 INFO        		isaac_adc.read()
2024-05-29 17:03:01 INFO        	isaac_adc(technology=32nm, global_cycle_seconds=1e-9, resolution=6, energy=1.20, area=626.91, n_instances=1, area_scale=1, energy_scale=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		isaac_adc.convert()
2024-05-29 17:03:01 INFO        		isaac_adc.read()
2024-05-29 17:03:01 INFO        	isaac_adc(technology=32nm, global_cycle_seconds=1e-9, resolution=7, energy=1.42, area=845.18, n_instances=1, area_scale=1, energy_scale=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		isaac_adc.convert()
2024-05-29 17:03:01 INFO        		isaac_adc.read()
2024-05-29 17:03:01 INFO        	isaac_adc(technology=32nm, global_cycle_seconds=1e-9, resolution=8, energy=1.67, area=1200, n_instances=1, area_scale=1, energy_scale=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		isaac_adc.convert()
2024-05-29 17:03:01 INFO        		isaac_adc.read()
2024-05-29 17:03:01 INFO        	isaac_adc(technology=32nm, global_cycle_seconds=1e-9, resolution=9, energy=1.969078145, area=1827.911647, n_instances=1, area_scale=1, energy_scale=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		isaac_adc.convert()
2024-05-29 17:03:01 INFO        		isaac_adc.read()
2024-05-29 17:03:01 INFO        	isaac_adc(technology=32nm, global_cycle_seconds=1e-9, resolution=10, energy=2.379022742, area=3002.008032, n_instances=1, area_scale=1, energy_scale=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		isaac_adc.convert()
2024-05-29 17:03:01 INFO        		isaac_adc.read()
2024-05-29 17:03:01 INFO        	isaac_chip2chip_link(technology=65nm, global_cycle_seconds=1e-9, width|datawidth=128, energy=26, area=23000000, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		isaac_chip2chip_link.read()
2024-05-29 17:03:01 INFO        		isaac_chip2chip_link.write()
2024-05-29 17:03:01 INFO        		isaac_chip2chip_link.update()
2024-05-29 17:03:01 INFO        	isaac_chip2chip_link(technology=65nm, global_cycle_seconds=1e-9, width|datawidth=128, energy=0, area=23000000, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		isaac_chip2chip_link.leak()
2024-05-29 17:03:01 INFO        	isaac_dac(technology=32nm, global_cycle_seconds=1e-9, resolution=1, energy=0.41667, area=0.166015625, rows=1, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		isaac_dac.drive()
2024-05-29 17:03:01 INFO        		isaac_dac.read()
2024-05-29 17:03:01 INFO        	isaac_dac(technology=32nm, global_cycle_seconds=1e-9, resolution=1, energy=0, area=0.166015625, rows=1, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		isaac_dac.write()
2024-05-29 17:03:01 INFO        		isaac_dac.leak()
2024-05-29 17:03:01 INFO        		isaac_dac.update()
2024-05-29 17:03:01 INFO        	isaac_edram(technology=32nm, global_cycle_seconds=1e-9, width|datawidth=256, depth=2048, energy=20.45, area=83000, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		isaac_edram.read()
2024-05-29 17:03:01 INFO        		isaac_edram.write()
2024-05-29 17:03:01 INFO        		isaac_edram.update()
2024-05-29 17:03:01 INFO        	isaac_edram(technology=32nm, global_cycle_seconds=1e-9, width|datawidth=256, depth=2048, energy=0, area=83000, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		isaac_edram.leak()
2024-05-29 17:03:01 INFO        	isaac_edram_bus(technology=32nm, global_cycle_seconds=1e-9, width|datawidth=1, energy=0.054, area=29.296875, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		isaac_edram_bus.read()
2024-05-29 17:03:01 INFO        	isaac_edram_bus(technology=32nm, global_cycle_seconds=1e-9, width|datawidth=1, energy=0, area=29.296875, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		isaac_edram_bus.leak()
2024-05-29 17:03:01 INFO        		isaac_edram_bus.update()
2024-05-29 17:03:01 INFO        		isaac_edram_bus.write()
2024-05-29 17:03:01 INFO        	isaac_router(technology=32nm, global_cycle_seconds=1e-9, width|datawidth=256, energy=20.74, area=150000, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		isaac_router.read()
2024-05-29 17:03:01 INFO        	isaac_router(technology=32nm, global_cycle_seconds=1e-9, width|datawidth=256, energy=0, area=150000, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		isaac_router.leak()
2024-05-29 17:03:01 INFO        		isaac_router.update()
2024-05-29 17:03:01 INFO        		isaac_router.write()
2024-05-29 17:03:01 INFO        	isaac_router_shared_by_four(technology=32nm, global_cycle_seconds=1e-9, width|datawidth=256, energy=20.74, area=37500, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		isaac_router_shared_by_four.read()
2024-05-29 17:03:01 INFO        	isaac_router_shared_by_four(technology=32nm, global_cycle_seconds=1e-9, width|datawidth=256, energy=0, area=37500, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		isaac_router_shared_by_four.leak()
2024-05-29 17:03:01 INFO        		isaac_router_shared_by_four.update()
2024-05-29 17:03:01 INFO        		isaac_router_shared_by_four.write()
2024-05-29 17:03:01 INFO        	isaac_shift_add(technology=32nm, global_cycle_seconds=1e-9, width|datawidth=16, energy=0.021, area=60, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		isaac_shift_add.shift_add()
2024-05-29 17:03:01 INFO        		isaac_shift_add.read()
2024-05-29 17:03:01 INFO        		isaac_shift_add.write()
2024-05-29 17:03:01 INFO        	isaac_shift_add(technology=32nm, global_cycle_seconds=1e-9, width|datawidth=16, energy=0.00E+00, area=60, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		isaac_shift_add.leak()
2024-05-29 17:03:01 INFO        		isaac_shift_add.update()
2024-05-29 17:03:01 INFO        	jia_datapath(technology=65nm, global_cycle_seconds=540e-9, voltage=1.2, energy=12, area=10535, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		jia_datapath.read()
2024-05-29 17:03:01 INFO        	jia_datapath(technology=65nm, global_cycle_seconds=540e-9, voltage=1.2, energy=2.4, area=10535, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		jia_datapath.leak()
2024-05-29 17:03:01 INFO        	jia_datapath(technology=65nm, global_cycle_seconds=540e-9, voltage=1.2, energy=0, area=10535, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		jia_datapath.write()
2024-05-29 17:03:01 INFO        		jia_datapath.update()
2024-05-29 17:03:01 INFO        	jia_shift_add(technology=65nm, global_cycle_seconds=540e-9, resolution=8, voltage=1.2, energy=2.25, area=5000, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		jia_shift_add.read()
2024-05-29 17:03:01 INFO        	jia_shift_add(technology=65nm, global_cycle_seconds=540e-9, resolution=8, voltage=1.2, energy=1.2, area=5000, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		jia_shift_add.leak()
2024-05-29 17:03:01 INFO        	jia_shift_add(technology=65nm, global_cycle_seconds=540e-9, resolution=8, voltage=1.2, energy=0, area=5000, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		jia_shift_add.write()
2024-05-29 17:03:01 INFO        		jia_shift_add.update()
2024-05-29 17:03:01 INFO        	jia_zero_gate(technology=65nm, global_cycle_seconds=540e-9, rows=1, resolution=8, voltage=1.2, energy=0.5, area=174, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		jia_zero_gate.read()
2024-05-29 17:03:01 INFO        	jia_zero_gate(technology=65nm, global_cycle_seconds=540e-9, rows=1, resolution=8, voltage=1.2, energy=0.2, area=174, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		jia_zero_gate.leak()
2024-05-29 17:03:01 INFO        	jia_zero_gate(technology=65nm, global_cycle_seconds=540e-9, rows=1, resolution=8, voltage=1.2, energy=0, area=174, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		jia_zero_gate.write()
2024-05-29 17:03:01 INFO        		jia_zero_gate.update()
2024-05-29 17:03:01 INFO        	max_pool(n_bits=8, pool_window=2, global_cycle_seconds=1e-09, technology=32) <Neurosim Plug-In plug-in> 
2024-05-29 17:03:01 INFO        		max_pool.read()
2024-05-29 17:03:01 INFO        		max_pool.mac_random()
2024-05-29 17:03:01 INFO        		max_pool.mac_reused()
2024-05-29 17:03:01 INFO        		max_pool.compute()
2024-05-29 17:03:01 INFO        		max_pool.add()
2024-05-29 17:03:01 INFO        		max_pool.shift_add()
2024-05-29 17:03:01 INFO        		max_pool.convert()
2024-05-29 17:03:01 INFO        		max_pool.write()
2024-05-29 17:03:01 INFO        		max_pool.set()
2024-05-29 17:03:01 INFO        		max_pool.erase()
2024-05-29 17:03:01 INFO        		max_pool.update()
2024-05-29 17:03:01 INFO        		max_pool.leak()
2024-05-29 17:03:01 INFO        	memory_cell(rows=32, cols=32, cols_active_at_once=8, cell_config=placeholder, average_input_value=1, average_cell_value=1, sequential=False, adc_resolution=0, read_pulse_width=1e-08, voltage_dac_bits=1, temporal_dac_bits=1, temporal_spiking=False, voltage=0, threshold_voltage=0, global_cycle_seconds=1e-09, technology=32) <Neurosim Plug-In plug-in> 
2024-05-29 17:03:01 INFO        		memory_cell.read()
2024-05-29 17:03:01 INFO        		memory_cell.mac_random()
2024-05-29 17:03:01 INFO        		memory_cell.mac_reused()
2024-05-29 17:03:01 INFO        		memory_cell.compute()
2024-05-29 17:03:01 INFO        		memory_cell.add()
2024-05-29 17:03:01 INFO        		memory_cell.shift_add()
2024-05-29 17:03:01 INFO        		memory_cell.convert()
2024-05-29 17:03:01 INFO        		memory_cell.write()
2024-05-29 17:03:01 INFO        		memory_cell.set()
2024-05-29 17:03:01 INFO        		memory_cell.erase()
2024-05-29 17:03:01 INFO        		memory_cell.update()
2024-05-29 17:03:01 INFO        		memory_cell.leak()
2024-05-29 17:03:01 INFO        	mux(n_mux_inputs=2, n_bits=8, global_cycle_seconds=1e-09, technology=32) <Neurosim Plug-In plug-in> 
2024-05-29 17:03:01 INFO        		mux.read()
2024-05-29 17:03:01 INFO        		mux.mac_random()
2024-05-29 17:03:01 INFO        		mux.mac_reused()
2024-05-29 17:03:01 INFO        		mux.compute()
2024-05-29 17:03:01 INFO        		mux.add()
2024-05-29 17:03:01 INFO        		mux.shift_add()
2024-05-29 17:03:01 INFO        		mux.convert()
2024-05-29 17:03:01 INFO        		mux.write()
2024-05-29 17:03:01 INFO        		mux.set()
2024-05-29 17:03:01 INFO        		mux.erase()
2024-05-29 17:03:01 INFO        		mux.update()
2024-05-29 17:03:01 INFO        		mux.leak()
2024-05-29 17:03:01 INFO        	nand_gate(global_cycle_seconds=1e-09, technology=32) <Neurosim Plug-In plug-in> 
2024-05-29 17:03:01 INFO        		nand_gate.read()
2024-05-29 17:03:01 INFO        		nand_gate.mac_random()
2024-05-29 17:03:01 INFO        		nand_gate.mac_reused()
2024-05-29 17:03:01 INFO        		nand_gate.compute()
2024-05-29 17:03:01 INFO        		nand_gate.add()
2024-05-29 17:03:01 INFO        		nand_gate.shift_add()
2024-05-29 17:03:01 INFO        		nand_gate.convert()
2024-05-29 17:03:01 INFO        		nand_gate.write()
2024-05-29 17:03:01 INFO        		nand_gate.set()
2024-05-29 17:03:01 INFO        		nand_gate.erase()
2024-05-29 17:03:01 INFO        		nand_gate.update()
2024-05-29 17:03:01 INFO        		nand_gate.leak()
2024-05-29 17:03:01 INFO        	newton_adc(technology=32nm, global_cycle_seconds=1e-9, resolution=9, energy=2.58333333333, area=1500, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		newton_adc.convert()
2024-05-29 17:03:01 INFO        		newton_adc.read()
2024-05-29 17:03:01 INFO        	newton_adc(technology=32nm, global_cycle_seconds=1e-9, resolution=9, energy=0, area=1500, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		newton_adc.write()
2024-05-29 17:03:01 INFO        		newton_adc.update()
2024-05-29 17:03:01 INFO        		newton_adc.leak()
2024-05-29 17:03:01 INFO        	nor_gate(global_cycle_seconds=1e-09, technology=32) <Neurosim Plug-In plug-in> 
2024-05-29 17:03:01 INFO        		nor_gate.read()
2024-05-29 17:03:01 INFO        		nor_gate.mac_random()
2024-05-29 17:03:01 INFO        		nor_gate.mac_reused()
2024-05-29 17:03:01 INFO        		nor_gate.compute()
2024-05-29 17:03:01 INFO        		nor_gate.add()
2024-05-29 17:03:01 INFO        		nor_gate.shift_add()
2024-05-29 17:03:01 INFO        		nor_gate.convert()
2024-05-29 17:03:01 INFO        		nor_gate.write()
2024-05-29 17:03:01 INFO        		nor_gate.set()
2024-05-29 17:03:01 INFO        		nor_gate.erase()
2024-05-29 17:03:01 INFO        		nor_gate.update()
2024-05-29 17:03:01 INFO        		nor_gate.leak()
2024-05-29 17:03:01 INFO        	not_gate(global_cycle_seconds=1e-09, technology=32) <Neurosim Plug-In plug-in> 
2024-05-29 17:03:01 INFO        		not_gate.read()
2024-05-29 17:03:01 INFO        		not_gate.mac_random()
2024-05-29 17:03:01 INFO        		not_gate.mac_reused()
2024-05-29 17:03:01 INFO        		not_gate.compute()
2024-05-29 17:03:01 INFO        		not_gate.add()
2024-05-29 17:03:01 INFO        		not_gate.shift_add()
2024-05-29 17:03:01 INFO        		not_gate.convert()
2024-05-29 17:03:01 INFO        		not_gate.write()
2024-05-29 17:03:01 INFO        		not_gate.set()
2024-05-29 17:03:01 INFO        		not_gate.erase()
2024-05-29 17:03:01 INFO        		not_gate.update()
2024-05-29 17:03:01 INFO        		not_gate.leak()
2024-05-29 17:03:01 INFO        	pim_adc: alias for ADC Plug-In plug-in adc
2024-05-29 17:03:01 INFO        	pim_array_adc: alias for ADC Plug-In plug-in adc
2024-05-29 17:03:01 INFO        	raella_quant_multiplier(technology=45nm, global_cycle_seconds=1e-9, energy=0.25, area=0, n_instances=1, area_scale=1, energy_scale=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		raella_quant_multiplier.multiply()
2024-05-29 17:03:01 INFO        		raella_quant_multiplier.read()
2024-05-29 17:03:01 INFO        	raella_quant_multiplier(technology=45nm, global_cycle_seconds=1e-9, energy=0, area=0, n_instances=1, area_scale=1, energy_scale=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		raella_quant_multiplier.update()
2024-05-29 17:03:01 INFO        		raella_quant_multiplier.leak()
2024-05-29 17:03:01 INFO        		raella_quant_multiplier.write()
2024-05-29 17:03:01 INFO        	reg(technology, global_cycle_seconds, width) <Aladdin_table plug-in> 
2024-05-29 17:03:01 INFO        		reg.leak()
2024-05-29 17:03:01 INFO        		reg.access()
2024-05-29 17:03:01 INFO        	regfile(technology, global_cycle_seconds, width, depth) <Aladdin_table plug-in> 
2024-05-29 17:03:01 INFO        		regfile.leak()
2024-05-29 17:03:01 INFO        		regfile.access()
2024-05-29 17:03:01 INFO        	sar_adc: alias for ADC Plug-In plug-in adc
2024-05-29 17:03:01 INFO        	shift_add(n_bits=8, shift_register_n_bits=16, global_cycle_seconds=1e-09, technology=32) <Neurosim Plug-In plug-in> 
2024-05-29 17:03:01 INFO        		shift_add.read()
2024-05-29 17:03:01 INFO        		shift_add.mac_random()
2024-05-29 17:03:01 INFO        		shift_add.mac_reused()
2024-05-29 17:03:01 INFO        		shift_add.compute()
2024-05-29 17:03:01 INFO        		shift_add.add()
2024-05-29 17:03:01 INFO        		shift_add.shift_add()
2024-05-29 17:03:01 INFO        		shift_add.convert()
2024-05-29 17:03:01 INFO        		shift_add.write()
2024-05-29 17:03:01 INFO        		shift_add.set()
2024-05-29 17:03:01 INFO        		shift_add.erase()
2024-05-29 17:03:01 INFO        		shift_add.update()
2024-05-29 17:03:01 INFO        		shift_add.leak()
2024-05-29 17:03:01 INFO        	SRAM(technology, global_cycle_seconds, width, depth) <Aladdin_table plug-in> 
2024-05-29 17:03:01 INFO        		SRAM.leak()
2024-05-29 17:03:01 INFO        		SRAM.access()
2024-05-29 17:03:01 INFO        	SRAM(technology, width, depth, n_rw_ports=1, n_banks=1) <CactiSRAM plug-in> 
2024-05-29 17:03:01 INFO        		SRAM.idle()
2024-05-29 17:03:01 INFO        		SRAM.read(address_delta=True, data_delta=True)
2024-05-29 17:03:01 INFO        		SRAM.update(address_delta=True, data_delta=True)
2024-05-29 17:03:01 INFO        		SRAM.write(address_delta=True, data_delta=True)
2024-05-29 17:03:01 INFO        		SRAM.leak(global_cycle_seconds)
2024-05-29 17:03:01 INFO        	timely_charging_comparator(technology=65nm, global_cycle_seconds=1e-9, energy=0.0417, area=40, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		timely_charging_comparator.compare()
2024-05-29 17:03:01 INFO        		timely_charging_comparator.read()
2024-05-29 17:03:01 INFO        	timely_charging_comparator(technology=65nm, global_cycle_seconds=1e-9, energy=0, area=40, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		timely_charging_comparator.write()
2024-05-29 17:03:01 INFO        		timely_charging_comparator.update()
2024-05-29 17:03:01 INFO        		timely_charging_comparator.leak()
2024-05-29 17:03:01 INFO        	timely_dtc(technology=65nm, global_cycle_seconds=1e-9, resolution=8, energy=0.0375, area=240, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		timely_dtc.convert()
2024-05-29 17:03:01 INFO        		timely_dtc.read()
2024-05-29 17:03:01 INFO        	timely_dtc(technology=65nm, global_cycle_seconds=1e-9, resolution=8, energy=0, area=240, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		timely_dtc.write()
2024-05-29 17:03:01 INFO        		timely_dtc.leak()
2024-05-29 17:03:01 INFO        		timely_dtc.update()
2024-05-29 17:03:01 INFO        	timely_iadder(technology=65nm, global_cycle_seconds=1e-9, energy=0.0368, area=40, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		timely_iadder.read()
2024-05-29 17:03:01 INFO        		timely_iadder.add()
2024-05-29 17:03:01 INFO        	timely_iadder(technology=65nm, global_cycle_seconds=1e-9, energy=0, area=40, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		timely_iadder.write()
2024-05-29 17:03:01 INFO        		timely_iadder.update()
2024-05-29 17:03:01 INFO        		timely_iadder.leak()
2024-05-29 17:03:01 INFO        	timely_input_output_buffer(technology=65nm, global_cycle_seconds=1e-9, width|datawidth=128, depth=128, energy=203.776, area=40, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		timely_input_output_buffer.read()
2024-05-29 17:03:01 INFO        	timely_input_output_buffer(technology=65nm, global_cycle_seconds=1e-9, width|datawidth=128, depth=128, energy=496.624, area=40, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		timely_input_output_buffer.write()
2024-05-29 17:03:01 INFO        		timely_input_output_buffer.update()
2024-05-29 17:03:01 INFO        	timely_input_output_buffer(technology=65nm, global_cycle_seconds=1e-9, width|datawidth=128, depth=128, energy=0, area=40, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		timely_input_output_buffer.leak()
2024-05-29 17:03:01 INFO        	timely_psubbuf(technology=65nm, global_cycle_seconds=1e-9, n_instances=1, energy=0.0023, area=5, area_scale=1, energy_scale=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		timely_psubbuf.drive()
2024-05-29 17:03:01 INFO        		timely_psubbuf.read()
2024-05-29 17:03:01 INFO        		timely_psubbuf.convert()
2024-05-29 17:03:01 INFO        	timely_psubbuf(technology=65nm, global_cycle_seconds=1e-9, n_instances=1, energy=0, area=5, area_scale=1, energy_scale=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		timely_psubbuf.leak()
2024-05-29 17:03:01 INFO        		timely_psubbuf.update()
2024-05-29 17:03:01 INFO        		timely_psubbuf.write()
2024-05-29 17:03:01 INFO        	timely_tdc(technology=65nm, global_cycle_seconds=1e-9, resolution=8, energy=0.145, area=310, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		timely_tdc.convert()
2024-05-29 17:03:01 INFO        		timely_tdc.read()
2024-05-29 17:03:01 INFO        	timely_tdc(technology=65nm, global_cycle_seconds=1e-9, resolution=8, energy=0, area=310, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		timely_tdc.leak()
2024-05-29 17:03:01 INFO        		timely_tdc.write()
2024-05-29 17:03:01 INFO        		timely_tdc.update()
2024-05-29 17:03:01 INFO        	timely_xsubbuf(technology=65nm, global_cycle_seconds=1e-9, rows=1, energy=0.00062, area=5, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		timely_xsubbuf.read()
2024-05-29 17:03:01 INFO        		timely_xsubbuf.drive()
2024-05-29 17:03:01 INFO        		timely_xsubbuf.buffer()
2024-05-29 17:03:01 INFO        	timely_xsubbuf(technology=65nm, global_cycle_seconds=1e-9, rows=1, energy=0, area=5, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		timely_xsubbuf.leak()
2024-05-29 17:03:01 INFO        		timely_xsubbuf.write()
2024-05-29 17:03:01 INFO        		timely_xsubbuf.update()
2024-05-29 17:03:01 INFO        	wan_analog_integrator(technology=130nm, n_steps=1, global_cycle_seconds=1e-6, voltage=1.8, energy=0.25, area=350, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		wan_analog_integrator.read()
2024-05-29 17:03:01 INFO        	wan_analog_integrator(technology=130nm, n_steps=*, global_cycle_seconds=1e-6, voltage=1.8, energy=0, area=350, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		wan_analog_integrator.leak()
2024-05-29 17:03:01 INFO        	wan_analog_integrator(technology=130nm, n_steps=*, global_cycle_seconds=1e-6, voltage=1.8, energy=0, area=350, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		wan_analog_integrator.write()
2024-05-29 17:03:01 INFO        		wan_analog_integrator.update()
2024-05-29 17:03:01 INFO        	wan_analog_sample(technology=130nm, global_cycle_seconds=1e-6, voltage=1.8, energy=1.2, area=350, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		wan_analog_sample.read()
2024-05-29 17:03:01 INFO        	wan_analog_sample(technology=130nm, global_cycle_seconds=1e-6, voltage=1.8, energy=0, area=350, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		wan_analog_sample.leak()
2024-05-29 17:03:01 INFO        	wan_analog_sample(technology=130nm, global_cycle_seconds=1e-6, voltage=1.8, energy=0, area=350, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		wan_analog_sample.write()
2024-05-29 17:03:01 INFO        		wan_analog_sample.update()
2024-05-29 17:03:01 INFO        	wan_shift_add(technology=130nm, n_steps=1, global_cycle_seconds=1e-6, resolution=8, voltage=1.8, energy=0.1, area=170, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		wan_shift_add.read()
2024-05-29 17:03:01 INFO        	wan_shift_add(technology=130nm, n_steps=*, global_cycle_seconds=1e-6, resolution=8, voltage=1.8, energy=0, area=170, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		wan_shift_add.leak()
2024-05-29 17:03:01 INFO        	wan_shift_add(technology=130nm, n_steps=*, global_cycle_seconds=1e-6, resolution=8, voltage=1.8, energy=0, area=170, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		wan_shift_add.write()
2024-05-29 17:03:01 INFO        		wan_shift_add.update()
2024-05-29 17:03:01 INFO        	wan_variable_precision_adc(technology=130nm, n_steps=1, global_cycle_seconds=1e-6, voltage=1.8, energy=0.3, area=400, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		wan_variable_precision_adc.read()
2024-05-29 17:03:01 INFO        	wan_variable_precision_adc(technology=130nm, n_steps=*, global_cycle_seconds=1e-6, voltage=1.8, energy=0, area=400, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		wan_variable_precision_adc.leak()
2024-05-29 17:03:01 INFO        	wan_variable_precision_adc(technology=130nm, n_steps=*, global_cycle_seconds=1e-6, voltage=1.8, energy=0, area=400, area_scale=1, energy_scale=1, n_instances=1) <Library plug-in> 
2024-05-29 17:03:01 INFO        		wan_variable_precision_adc.write()
2024-05-29 17:03:01 INFO        		wan_variable_precision_adc.update()
2024-05-29 17:03:01 INFO        	wire(technology, global_cycle_seconds, length, width) <Aladdin_table plug-in> 
2024-05-29 17:03:01 INFO        		wire.transfer()
2024-05-29 17:03:01 INFO        		wire.transfer_random()
2024-05-29 17:03:01 INFO        
2024-05-29 17:03:01 INFO        Plug-ins without entries:
2024-05-29 17:03:01 INFO        	DEPRECATED table-based-plug-ins. Use the Library plug-in instead.
2024-05-29 17:03:01 INFO        
2024-05-29 17:03:01 INFO        Parsing functions:
2024-05-29 17:03:01 INFO        
2024-05-29 17:03:01 INFO        Calculated adder."width" as "adder_width" = 16.
2024-05-29 17:03:01 INFO        Calculated multiplier."width" as "multiplier_width" = 8.
2024-05-29 17:03:01 INFO        
2024-05-29 17:03:01 INFO        ENERGY ESTIMATION for DRAM(type=LPDDR4, width=64, datawidth=8, has_power_gating=False, n_banks=2, cluster_size=1, reduction_supported=True, multiple_buffering=1, min_utilization=0, allow_overbooking=False, meshX=1, meshY=1, version=0.4, technology=45nm, global_cycle_seconds=1e-09, DATAWIDTH=8, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).leak(global_cycle_seconds=1e-09, action_latency_cycles=1)
2024-05-29 17:03:01 INFO        CactiDRAM estimated 0 with accuracy 80%. Messages:
2024-05-29 17:03:01 INFO        | Unused arguments (datawidth, has_power_gating, n_banks, cluster_size, reduction_supported, multiple_buffering, min_utilization, allow_overbooking, meshX, meshY, version, technology, global_cycle_seconds, DATAWIDTH, action_latency_cycles, cycle_seconds, n_instances) provided for DRAM.__init__. Arguments used: (type, width)
2024-05-29 17:03:01 INFO        | Unused arguments (action_latency_cycles) provided for DRAM.leak. Arguments used: (global_cycle_seconds)
2024-05-29 17:03:01 INFO        | Multiplying by n_instances 1
2024-05-29 17:03:01 DEBUG       Why plug-ins did not estimate:
2024-05-29 17:03:01 DEBUG       | CactiDRAM with accuracy 80% estimating accuracy: No messages found.
2024-05-29 17:03:01 DEBUG       | DEPRECATED table-based-plug-ins. Use the Library plug-in instead. with accuracy 0% estimating accuracy: Identified a set of tables named: test_tables
2024-05-29 17:03:01 DEBUG       | Aladdin_table with accuracy 0% estimating accuracy: Primitive class DRAM is not supported. Supported classes are: ['regfile', 'SRAM', 'counter', 'comparator', 'crossbar', 'wire', 'FIFO', 'bitwise', 'intadder', 'intmultiplier', 'intmac', 'fpadder', 'fpmultiplier', 'fpmac', 'reg']
2024-05-29 17:03:01 DEBUG       | dummy_table with accuracy 0% estimating accuracy: Set attribute "technology" to -1 to use the dummy table
2024-05-29 17:03:01 DEBUG       | Neurosim Plug-In with accuracy 0% estimating accuracy: ERROR: NeuroSim estimator does not support dram. Supported primitives are: ['array_row_drivers', 'array_col_drivers', 'array_adc', 'memory_cell', 'shift_add', 'intadder', 'intadder_tree', 'max_pool', 'mux', 'flip_flop', 'not_gate', 'nand_gate', 'nor_gate']
2024-05-29 17:03:01 DEBUG       | Library with accuracy 0% estimating accuracy: ValueError: Could not find leak for dram
2024-05-29 17:03:01 DEBUG       | ADC Plug-In with accuracy 0% estimating accuracy: ADC Plug-In does not support DRAM.leak. Supported classes: ['adc', 'pim_adc', 'sar_adc', 'array_adc', 'pim_array_adc', 'cim_array_adc', 'cim_adc'], supported actions: ['convert', 'drive', 'read', 'sample', 'leak', 'activate']
2024-05-29 17:03:01 DEBUG       | CactiCache with accuracy 0% estimating accuracy: Class name DRAM is not supported. Supported class names: ['cache']
2024-05-29 17:03:01 DEBUG       | CactiSRAM with accuracy 0% estimating accuracy: Class name DRAM is not supported. Supported class names: ['SRAM']
2024-05-29 17:03:01 INFO        
2024-05-29 17:03:01 INFO        ENERGY ESTIMATION for DRAM(type=LPDDR4, width=64, datawidth=8, has_power_gating=False, n_banks=2, cluster_size=1, reduction_supported=True, multiple_buffering=1, min_utilization=0, allow_overbooking=False, meshX=1, meshY=1, version=0.4, technology=45nm, global_cycle_seconds=1e-09, DATAWIDTH=8, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).read(global_cycle_seconds=1e-09, action_latency_cycles=1)
2024-05-29 17:03:01 INFO        CactiDRAM estimated 5.12e-10 with accuracy 80%. Messages:
2024-05-29 17:03:01 INFO        | Unused arguments (datawidth, has_power_gating, n_banks, cluster_size, reduction_supported, multiple_buffering, min_utilization, allow_overbooking, meshX, meshY, version, technology, global_cycle_seconds, DATAWIDTH, action_latency_cycles, cycle_seconds, n_instances) provided for DRAM.__init__. Arguments used: (type, width)
2024-05-29 17:03:01 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles) provided for DRAM.read. Arguments used: ()
2024-05-29 17:03:01 DEBUG       Why plug-ins did not estimate:
2024-05-29 17:03:01 DEBUG       | CactiDRAM with accuracy 80% estimating accuracy: No messages found.
2024-05-29 17:03:01 DEBUG       | DEPRECATED table-based-plug-ins. Use the Library plug-in instead. with accuracy 0% estimating accuracy: Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       | Aladdin_table with accuracy 0% estimating accuracy: Primitive class DRAM is not supported. Supported classes are: ['regfile', 'SRAM', 'counter', 'comparator', 'crossbar', 'wire', 'FIFO', 'bitwise', 'intadder', 'intmultiplier', 'intmac', 'fpadder', 'fpmultiplier', 'fpmac', 'reg']
2024-05-29 17:03:01 DEBUG       | dummy_table with accuracy 0% estimating accuracy: Set attribute "technology" to -1 to use the dummy table
2024-05-29 17:03:01 DEBUG       | Neurosim Plug-In with accuracy 0% estimating accuracy: ERROR: NeuroSim estimator does not support dram. Supported primitives are: ['array_row_drivers', 'array_col_drivers', 'array_adc', 'memory_cell', 'shift_add', 'intadder', 'intadder_tree', 'max_pool', 'mux', 'flip_flop', 'not_gate', 'nand_gate', 'nor_gate']
2024-05-29 17:03:01 DEBUG       | Library with accuracy 0% estimating accuracy: ValueError: Could not find energy for dram
2024-05-29 17:03:01 DEBUG       | ADC Plug-In with accuracy 0% estimating accuracy: ADC Plug-In does not support DRAM.read. Supported classes: ['adc', 'pim_adc', 'sar_adc', 'array_adc', 'pim_array_adc', 'cim_array_adc', 'cim_adc'], supported actions: ['convert', 'drive', 'read', 'sample', 'leak', 'activate']
2024-05-29 17:03:01 DEBUG       | CactiCache with accuracy 0% estimating accuracy: Class name DRAM is not supported. Supported class names: ['cache']
2024-05-29 17:03:01 DEBUG       | CactiSRAM with accuracy 0% estimating accuracy: Class name DRAM is not supported. Supported class names: ['SRAM']
2024-05-29 17:03:01 INFO        
2024-05-29 17:03:01 INFO        ENERGY ESTIMATION for DRAM(type=LPDDR4, width=64, datawidth=8, has_power_gating=False, n_banks=2, cluster_size=1, reduction_supported=True, multiple_buffering=1, min_utilization=0, allow_overbooking=False, meshX=1, meshY=1, version=0.4, technology=45nm, global_cycle_seconds=1e-09, DATAWIDTH=8, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).update(global_cycle_seconds=1e-09, action_latency_cycles=1)
2024-05-29 17:03:01 INFO        CactiDRAM estimated 5.12e-10 with accuracy 80%. Messages:
2024-05-29 17:03:01 INFO        | Unused arguments (datawidth, has_power_gating, n_banks, cluster_size, reduction_supported, multiple_buffering, min_utilization, allow_overbooking, meshX, meshY, version, technology, global_cycle_seconds, DATAWIDTH, action_latency_cycles, cycle_seconds, n_instances) provided for DRAM.__init__. Arguments used: (type, width)
2024-05-29 17:03:01 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles) provided for DRAM.update. Arguments used: ()
2024-05-29 17:03:01 DEBUG       Why plug-ins did not estimate:
2024-05-29 17:03:01 DEBUG       | CactiDRAM with accuracy 80% estimating accuracy: No messages found.
2024-05-29 17:03:01 DEBUG       | DEPRECATED table-based-plug-ins. Use the Library plug-in instead. with accuracy 0% estimating accuracy: Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       | Aladdin_table with accuracy 0% estimating accuracy: Primitive class DRAM is not supported. Supported classes are: ['regfile', 'SRAM', 'counter', 'comparator', 'crossbar', 'wire', 'FIFO', 'bitwise', 'intadder', 'intmultiplier', 'intmac', 'fpadder', 'fpmultiplier', 'fpmac', 'reg']
2024-05-29 17:03:01 DEBUG       | dummy_table with accuracy 0% estimating accuracy: Set attribute "technology" to -1 to use the dummy table
2024-05-29 17:03:01 DEBUG       | Neurosim Plug-In with accuracy 0% estimating accuracy: ERROR: NeuroSim estimator does not support dram. Supported primitives are: ['array_row_drivers', 'array_col_drivers', 'array_adc', 'memory_cell', 'shift_add', 'intadder', 'intadder_tree', 'max_pool', 'mux', 'flip_flop', 'not_gate', 'nand_gate', 'nor_gate']
2024-05-29 17:03:01 DEBUG       | Library with accuracy 0% estimating accuracy: ValueError: Could not find energy for dram
2024-05-29 17:03:01 DEBUG       | ADC Plug-In with accuracy 0% estimating accuracy: ADC Plug-In does not support DRAM.update. Supported classes: ['adc', 'pim_adc', 'sar_adc', 'array_adc', 'pim_array_adc', 'cim_array_adc', 'cim_adc'], supported actions: ['convert', 'drive', 'read', 'sample', 'leak', 'activate']
2024-05-29 17:03:01 DEBUG       | CactiCache with accuracy 0% estimating accuracy: Class name DRAM is not supported. Supported class names: ['cache']
2024-05-29 17:03:01 DEBUG       | CactiSRAM with accuracy 0% estimating accuracy: Class name DRAM is not supported. Supported class names: ['SRAM']
2024-05-29 17:03:01 INFO        
2024-05-29 17:03:01 INFO        ENERGY ESTIMATION for DRAM(type=LPDDR4, width=64, datawidth=8, has_power_gating=False, n_banks=2, cluster_size=1, reduction_supported=True, multiple_buffering=1, min_utilization=0, allow_overbooking=False, meshX=1, meshY=1, version=0.4, technology=45nm, global_cycle_seconds=1e-09, DATAWIDTH=8, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).write(global_cycle_seconds=1e-09, action_latency_cycles=1)
2024-05-29 17:03:01 INFO        CactiDRAM estimated 5.12e-10 with accuracy 80%. Messages:
2024-05-29 17:03:01 INFO        | Unused arguments (datawidth, has_power_gating, n_banks, cluster_size, reduction_supported, multiple_buffering, min_utilization, allow_overbooking, meshX, meshY, version, technology, global_cycle_seconds, DATAWIDTH, action_latency_cycles, cycle_seconds, n_instances) provided for DRAM.__init__. Arguments used: (type, width)
2024-05-29 17:03:01 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles) provided for DRAM.write. Arguments used: ()
2024-05-29 17:03:01 DEBUG       Why plug-ins did not estimate:
2024-05-29 17:03:01 DEBUG       | CactiDRAM with accuracy 80% estimating accuracy: No messages found.
2024-05-29 17:03:01 DEBUG       | DEPRECATED table-based-plug-ins. Use the Library plug-in instead. with accuracy 0% estimating accuracy: Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       | Aladdin_table with accuracy 0% estimating accuracy: Primitive class DRAM is not supported. Supported classes are: ['regfile', 'SRAM', 'counter', 'comparator', 'crossbar', 'wire', 'FIFO', 'bitwise', 'intadder', 'intmultiplier', 'intmac', 'fpadder', 'fpmultiplier', 'fpmac', 'reg']
2024-05-29 17:03:01 DEBUG       | dummy_table with accuracy 0% estimating accuracy: Set attribute "technology" to -1 to use the dummy table
2024-05-29 17:03:01 DEBUG       | Neurosim Plug-In with accuracy 0% estimating accuracy: ERROR: NeuroSim estimator does not support dram. Supported primitives are: ['array_row_drivers', 'array_col_drivers', 'array_adc', 'memory_cell', 'shift_add', 'intadder', 'intadder_tree', 'max_pool', 'mux', 'flip_flop', 'not_gate', 'nand_gate', 'nor_gate']
2024-05-29 17:03:01 DEBUG       | Library with accuracy 0% estimating accuracy: ValueError: Could not find energy for dram
2024-05-29 17:03:01 DEBUG       | ADC Plug-In with accuracy 0% estimating accuracy: ADC Plug-In does not support DRAM.write. Supported classes: ['adc', 'pim_adc', 'sar_adc', 'array_adc', 'pim_array_adc', 'cim_array_adc', 'cim_adc'], supported actions: ['convert', 'drive', 'read', 'sample', 'leak', 'activate']
2024-05-29 17:03:01 DEBUG       | CactiCache with accuracy 0% estimating accuracy: Class name DRAM is not supported. Supported class names: ['cache']
2024-05-29 17:03:01 DEBUG       | CactiSRAM with accuracy 0% estimating accuracy: Class name DRAM is not supported. Supported class names: ['SRAM']
2024-05-29 17:03:01 INFO        
2024-05-29 17:03:01 INFO        ENERGY ESTIMATION for SRAM(depth=512, width=128, datawidth=8, has_power_gating=False, n_banks=2, cluster_size=1, reduction_supported=True, multiple_buffering=1, min_utilization=0, allow_overbooking=False, meshX=1, meshY=1, version=0.4, technology=45nm, global_cycle_seconds=1e-09, DATAWIDTH=8, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).leak(global_cycle_seconds=1e-09, action_latency_cycles=1)
2024-05-29 17:03:01 INFO        CactiSRAM estimated 2.71132e-16 with accuracy 80%. Messages:
2024-05-29 17:03:01 INFO        | Unused arguments (datawidth, has_power_gating, cluster_size, reduction_supported, multiple_buffering, min_utilization, allow_overbooking, meshX, meshY, version, global_cycle_seconds, DATAWIDTH, action_latency_cycles, cycle_seconds, n_instances) provided for SRAM.__init__. Arguments used: (depth, width, n_banks, technology)
2024-05-29 17:03:01 INFO        | Unused arguments (action_latency_cycles) provided for SRAM.leak. Arguments used: (global_cycle_seconds)
2024-05-29 17:03:01 INFO        | Calling CACTI with cache_size=8192 n_rw_ports=1 block_size=16 tech_node_um=0.045 n_banks=2 tag_size=0 associativity=1
2024-05-29 17:03:01 INFO        | Calling CACTI with input path /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpntuyfp_5
2024-05-29 17:03:01 INFO        | CACTI output will be written to /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpw98laspx
2024-05-29 17:03:01 INFO        | CACTI executable not found at /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti/cacti
2024-05-29 17:03:01 INFO        | Calling: cd /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in ; ./cacti -infile /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpntuyfp_5 >> /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpw98laspx 2>&1
2024-05-29 17:03:01 INFO        | Cache bandwidth: 32.0 bits/cycle
2024-05-29 17:03:01 INFO        | Cache bandwidth: 331.75576555234744 bits/second
2024-05-29 17:03:01 INFO        | Global cycle time 1e-09 is less than the cache's random cycle time 0.771652
2024-05-29 17:03:01 INFO        | Multiplying by n_instances 1
2024-05-29 17:03:01 DEBUG       Why plug-ins did not estimate:
2024-05-29 17:03:01 DEBUG       | CactiSRAM with accuracy 80% estimating accuracy: No messages found.
2024-05-29 17:03:01 DEBUG       | DEPRECATED table-based-plug-ins. Use the Library plug-in instead. with accuracy 0% estimating accuracy: Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       | Aladdin_table with accuracy 0% estimating accuracy: Only SRAMs with depth <= 128 and width <= 32 are supported by Aladdin
2024-05-29 17:03:01 DEBUG       | dummy_table with accuracy 0% estimating accuracy: Set attribute "technology" to -1 to use the dummy table
2024-05-29 17:03:01 DEBUG       | Neurosim Plug-In with accuracy 0% estimating accuracy: ERROR: NeuroSim estimator does not support sram. Supported primitives are: ['array_row_drivers', 'array_col_drivers', 'array_adc', 'memory_cell', 'shift_add', 'intadder', 'intadder_tree', 'max_pool', 'mux', 'flip_flop', 'not_gate', 'nand_gate', 'nor_gate']
2024-05-29 17:03:01 DEBUG       | Library with accuracy 0% estimating accuracy: ValueError: Could not find leak for sram
2024-05-29 17:03:01 DEBUG       | ADC Plug-In with accuracy 0% estimating accuracy: ADC Plug-In does not support SRAM.leak. Supported classes: ['adc', 'pim_adc', 'sar_adc', 'array_adc', 'pim_array_adc', 'cim_array_adc', 'cim_adc'], supported actions: ['convert', 'drive', 'read', 'sample', 'leak', 'activate']
2024-05-29 17:03:01 DEBUG       | CactiCache with accuracy 0% estimating accuracy: Class name SRAM is not supported. Supported class names: ['cache']
2024-05-29 17:03:01 DEBUG       | CactiDRAM with accuracy 0% estimating accuracy: Class name SRAM is not supported. Supported class names: ['DRAM']
2024-05-29 17:03:01 INFO        
2024-05-29 17:03:01 INFO        ENERGY ESTIMATION for SRAM(depth=512, width=128, datawidth=8, has_power_gating=False, n_banks=2, cluster_size=1, reduction_supported=True, multiple_buffering=1, min_utilization=0, allow_overbooking=False, meshX=1, meshY=1, version=0.4, technology=45nm, global_cycle_seconds=1e-09, DATAWIDTH=8, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).read(global_cycle_seconds=1e-09, action_latency_cycles=1)
2024-05-29 17:03:01 INFO        CactiSRAM estimated 9.65335e-12 with accuracy 80%. Messages:
2024-05-29 17:03:01 INFO        | Unused arguments (datawidth, has_power_gating, cluster_size, reduction_supported, multiple_buffering, min_utilization, allow_overbooking, meshX, meshY, version, global_cycle_seconds, DATAWIDTH, action_latency_cycles, cycle_seconds, n_instances) provided for SRAM.__init__. Arguments used: (depth, width, n_banks, technology)
2024-05-29 17:03:01 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles) provided for SRAM.read. Arguments used: ()
2024-05-29 17:03:01 INFO        | Calling CACTI with cache_size=8192 n_rw_ports=1 block_size=16 tech_node_um=0.045 n_banks=2 tag_size=0 associativity=1
2024-05-29 17:03:01 INFO        | Calling CACTI with input path /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp77zxe0u3
2024-05-29 17:03:01 INFO        | CACTI output will be written to /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp3bo6j67k
2024-05-29 17:03:01 INFO        | CACTI executable not found at /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti/cacti
2024-05-29 17:03:01 INFO        | Calling: cd /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in ; ./cacti -infile /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp77zxe0u3 >> /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp3bo6j67k 2>&1
2024-05-29 17:03:01 INFO        | Cache bandwidth: 32.0 bits/cycle
2024-05-29 17:03:01 INFO        | Cache bandwidth: 331.75576555234744 bits/second
2024-05-29 17:03:01 DEBUG       Why plug-ins did not estimate:
2024-05-29 17:03:01 DEBUG       | CactiSRAM with accuracy 80% estimating accuracy: No messages found.
2024-05-29 17:03:01 DEBUG       | DEPRECATED table-based-plug-ins. Use the Library plug-in instead. with accuracy 0% estimating accuracy: Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       | Aladdin_table with accuracy 0% estimating accuracy: Only SRAMs with depth <= 128 and width <= 32 are supported by Aladdin
2024-05-29 17:03:01 DEBUG       | dummy_table with accuracy 0% estimating accuracy: Set attribute "technology" to -1 to use the dummy table
2024-05-29 17:03:01 DEBUG       | Neurosim Plug-In with accuracy 0% estimating accuracy: ERROR: NeuroSim estimator does not support sram. Supported primitives are: ['array_row_drivers', 'array_col_drivers', 'array_adc', 'memory_cell', 'shift_add', 'intadder', 'intadder_tree', 'max_pool', 'mux', 'flip_flop', 'not_gate', 'nand_gate', 'nor_gate']
2024-05-29 17:03:01 DEBUG       | Library with accuracy 0% estimating accuracy: ValueError: Could not find energy for sram
2024-05-29 17:03:01 DEBUG       | ADC Plug-In with accuracy 0% estimating accuracy: ADC Plug-In does not support SRAM.read. Supported classes: ['adc', 'pim_adc', 'sar_adc', 'array_adc', 'pim_array_adc', 'cim_array_adc', 'cim_adc'], supported actions: ['convert', 'drive', 'read', 'sample', 'leak', 'activate']
2024-05-29 17:03:01 DEBUG       | CactiCache with accuracy 0% estimating accuracy: Class name SRAM is not supported. Supported class names: ['cache']
2024-05-29 17:03:01 DEBUG       | CactiDRAM with accuracy 0% estimating accuracy: Class name SRAM is not supported. Supported class names: ['DRAM']
2024-05-29 17:03:01 INFO        
2024-05-29 17:03:01 INFO        ENERGY ESTIMATION for SRAM(depth=512, width=128, datawidth=8, has_power_gating=False, n_banks=2, cluster_size=1, reduction_supported=True, multiple_buffering=1, min_utilization=0, allow_overbooking=False, meshX=1, meshY=1, version=0.4, technology=45nm, global_cycle_seconds=1e-09, DATAWIDTH=8, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).update(global_cycle_seconds=1e-09, action_latency_cycles=1)
2024-05-29 17:03:01 INFO        CactiSRAM estimated 1.26203e-11 with accuracy 80%. Messages:
2024-05-29 17:03:01 INFO        | Unused arguments (datawidth, has_power_gating, cluster_size, reduction_supported, multiple_buffering, min_utilization, allow_overbooking, meshX, meshY, version, global_cycle_seconds, DATAWIDTH, action_latency_cycles, cycle_seconds, n_instances) provided for SRAM.__init__. Arguments used: (depth, width, n_banks, technology)
2024-05-29 17:03:01 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles) provided for SRAM.update. Arguments used: ()
2024-05-29 17:03:01 INFO        | Calling CACTI with cache_size=8192 n_rw_ports=1 block_size=16 tech_node_um=0.045 n_banks=2 tag_size=0 associativity=1
2024-05-29 17:03:01 INFO        | Calling CACTI with input path /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpl2s2a7rt
2024-05-29 17:03:01 INFO        | CACTI output will be written to /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmptquvmjfp
2024-05-29 17:03:01 INFO        | CACTI executable not found at /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti/cacti
2024-05-29 17:03:01 INFO        | Calling: cd /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in ; ./cacti -infile /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpl2s2a7rt >> /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmptquvmjfp 2>&1
2024-05-29 17:03:01 INFO        | Cache bandwidth: 32.0 bits/cycle
2024-05-29 17:03:01 INFO        | Cache bandwidth: 331.75576555234744 bits/second
2024-05-29 17:03:01 DEBUG       Why plug-ins did not estimate:
2024-05-29 17:03:01 DEBUG       | CactiSRAM with accuracy 80% estimating accuracy: No messages found.
2024-05-29 17:03:01 DEBUG       | DEPRECATED table-based-plug-ins. Use the Library plug-in instead. with accuracy 0% estimating accuracy: Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       | Aladdin_table with accuracy 0% estimating accuracy: Only SRAMs with depth <= 128 and width <= 32 are supported by Aladdin
2024-05-29 17:03:01 DEBUG       | dummy_table with accuracy 0% estimating accuracy: Set attribute "technology" to -1 to use the dummy table
2024-05-29 17:03:01 DEBUG       | Neurosim Plug-In with accuracy 0% estimating accuracy: ERROR: NeuroSim estimator does not support sram. Supported primitives are: ['array_row_drivers', 'array_col_drivers', 'array_adc', 'memory_cell', 'shift_add', 'intadder', 'intadder_tree', 'max_pool', 'mux', 'flip_flop', 'not_gate', 'nand_gate', 'nor_gate']
2024-05-29 17:03:01 DEBUG       | Library with accuracy 0% estimating accuracy: ValueError: Could not find energy for sram
2024-05-29 17:03:01 DEBUG       | ADC Plug-In with accuracy 0% estimating accuracy: ADC Plug-In does not support SRAM.update. Supported classes: ['adc', 'pim_adc', 'sar_adc', 'array_adc', 'pim_array_adc', 'cim_array_adc', 'cim_adc'], supported actions: ['convert', 'drive', 'read', 'sample', 'leak', 'activate']
2024-05-29 17:03:01 DEBUG       | CactiCache with accuracy 0% estimating accuracy: Class name SRAM is not supported. Supported class names: ['cache']
2024-05-29 17:03:01 DEBUG       | CactiDRAM with accuracy 0% estimating accuracy: Class name SRAM is not supported. Supported class names: ['DRAM']
2024-05-29 17:03:01 INFO        
2024-05-29 17:03:01 INFO        ENERGY ESTIMATION for SRAM(depth=512, width=128, datawidth=8, has_power_gating=False, n_banks=2, cluster_size=1, reduction_supported=True, multiple_buffering=1, min_utilization=0, allow_overbooking=False, meshX=1, meshY=1, version=0.4, technology=45nm, global_cycle_seconds=1e-09, DATAWIDTH=8, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1).write(global_cycle_seconds=1e-09, action_latency_cycles=1)
2024-05-29 17:03:01 INFO        CactiSRAM estimated 1.26203e-11 with accuracy 80%. Messages:
2024-05-29 17:03:01 INFO        | Unused arguments (datawidth, has_power_gating, cluster_size, reduction_supported, multiple_buffering, min_utilization, allow_overbooking, meshX, meshY, version, global_cycle_seconds, DATAWIDTH, action_latency_cycles, cycle_seconds, n_instances) provided for SRAM.__init__. Arguments used: (depth, width, n_banks, technology)
2024-05-29 17:03:01 INFO        | Unused arguments (global_cycle_seconds, action_latency_cycles) provided for SRAM.write. Arguments used: ()
2024-05-29 17:03:01 INFO        | Calling CACTI with cache_size=8192 n_rw_ports=1 block_size=16 tech_node_um=0.045 n_banks=2 tag_size=0 associativity=1
2024-05-29 17:03:01 INFO        | Calling CACTI with input path /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpr1vp6a3l
2024-05-29 17:03:01 INFO        | CACTI output will be written to /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp5vts3hta
2024-05-29 17:03:01 INFO        | CACTI executable not found at /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti/cacti
2024-05-29 17:03:01 INFO        | Calling: cd /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in ; ./cacti -infile /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmpr1vp6a3l >> /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp5vts3hta 2>&1
2024-05-29 17:03:01 INFO        | Cache bandwidth: 32.0 bits/cycle
2024-05-29 17:03:01 INFO        | Cache bandwidth: 331.75576555234744 bits/second
2024-05-29 17:03:01 DEBUG       Why plug-ins did not estimate:
2024-05-29 17:03:01 DEBUG       | CactiSRAM with accuracy 80% estimating accuracy: No messages found.
2024-05-29 17:03:01 DEBUG       | DEPRECATED table-based-plug-ins. Use the Library plug-in instead. with accuracy 0% estimating accuracy: Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       | Aladdin_table with accuracy 0% estimating accuracy: Only SRAMs with depth <= 128 and width <= 32 are supported by Aladdin
2024-05-29 17:03:01 DEBUG       | dummy_table with accuracy 0% estimating accuracy: Set attribute "technology" to -1 to use the dummy table
2024-05-29 17:03:01 DEBUG       | Neurosim Plug-In with accuracy 0% estimating accuracy: ERROR: NeuroSim estimator does not support sram. Supported primitives are: ['array_row_drivers', 'array_col_drivers', 'array_adc', 'memory_cell', 'shift_add', 'intadder', 'intadder_tree', 'max_pool', 'mux', 'flip_flop', 'not_gate', 'nand_gate', 'nor_gate']
2024-05-29 17:03:01 DEBUG       | Library with accuracy 0% estimating accuracy: ValueError: Could not find energy for sram
2024-05-29 17:03:01 DEBUG       | ADC Plug-In with accuracy 0% estimating accuracy: ADC Plug-In does not support SRAM.write. Supported classes: ['adc', 'pim_adc', 'sar_adc', 'array_adc', 'pim_array_adc', 'cim_array_adc', 'cim_adc'], supported actions: ['convert', 'drive', 'read', 'sample', 'leak', 'activate']
2024-05-29 17:03:01 DEBUG       | CactiCache with accuracy 0% estimating accuracy: Class name SRAM is not supported. Supported class names: ['cache']
2024-05-29 17:03:01 DEBUG       | CactiDRAM with accuracy 0% estimating accuracy: Class name SRAM is not supported. Supported class names: ['DRAM']
2024-05-29 17:03:01 INFO        
2024-05-29 17:03:01 INFO        ENERGY ESTIMATION for aladdin_adder(width=16, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).add(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2024-05-29 17:03:01 INFO        Library estimated 0.105p with accuracy 90%. Messages:
2024-05-29 17:03:01 INFO        | Found 1 entries for aladdin_adder.add.
2024-05-29 17:03:01 INFO        | Checking entry "{'technology': '45nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0.21', 'area': '2.78E+02', 'action': 'add', 'name': 'aladdin_adder', 'area_scale': 1, 'energy_scale': 1, 'n_instances': 1}
2024-05-29 17:03:01 INFO        | value=0.21, matching_attrs=3, log=['Scaling width from 32 to 16', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaled aladdin_adder.width from 32.0 to 16.0: 0.5x energy', 'Scaled aladdin_adder.global_cycle_seconds from 1e-09 to 1e-09: 1x energy', 'aladdin_adder energy has been scaled 0.5x']
2024-05-29 17:03:01 INFO        | Best-matching entry: {'technology': '45nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0.21', 'area': '2.78E+02', 'action': 'add', 'name': 'aladdin_adder', 'area_scale': 1, 'energy_scale': 1, 'n_instances': 1}
2024-05-29 17:03:01 INFO        | Scaling width from 32 to 16
2024-05-29 17:03:01 INFO        | Scaling global_cycle_seconds from 1e-9 to 1e-09
2024-05-29 17:03:01 INFO        | Scaled aladdin_adder.width from 32.0 to 16.0: 0.5x energy
2024-05-29 17:03:01 INFO        | Scaled aladdin_adder.global_cycle_seconds from 1e-09 to 1e-09: 1x energy
2024-05-29 17:03:01 INFO        | aladdin_adder energy has been scaled 0.5x
2024-05-29 17:03:01 DEBUG       Estimator logs:
2024-05-29 17:03:01 DEBUG       | Library with accuracy 90% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Found 1 entries for aladdin_adder.add.
2024-05-29 17:03:01 DEBUG       |  | Checking entry "{'technology': '45nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0.21', 'area': '2.78E+02', 'action': 'add', 'name': 'aladdin_adder', 'area_scale': 1, 'energy_scale': 1, 'n_instances': 1}
2024-05-29 17:03:01 DEBUG       |  | value=0.21, matching_attrs=3, log=['Scaling width from 32 to 16', 'Scaling global_cycle_seconds from 1e-9 to 1e-09']
2024-05-29 17:03:01 DEBUG       | DEPRECATED table-based-plug-ins. Use the Library plug-in instead. with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       | Aladdin_table with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       |  | Primitive class aladdin_adder is not supported. Supported classes are: ['regfile', 'SRAM', 'counter', 'comparator', 'crossbar', 'wire', 'FIFO', 'bitwise', 'intadder', 'intmultiplier', 'intmac', 'fpadder', 'fpmultiplier', 'fpmac', 'reg']
2024-05-29 17:03:01 DEBUG       | dummy_table with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       |  | Set attribute "technology" to -1 to use the dummy table
2024-05-29 17:03:01 DEBUG       | Neurosim Plug-In with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       |  | ERROR: NeuroSim estimator does not support aladdin_adder. Supported primitives are: ['array_row_drivers', 'array_col_drivers', 'array_adc', 'memory_cell', 'shift_add', 'intadder', 'intadder_tree', 'max_pool', 'mux', 'flip_flop', 'not_gate', 'nand_gate', 'nor_gate']
2024-05-29 17:03:01 DEBUG       | ADC Plug-In with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       |  | ADC Plug-In does not support aladdin_adder.add. Supported classes: ['adc', 'pim_adc', 'sar_adc', 'array_adc', 'pim_array_adc', 'cim_array_adc', 'cim_adc'], supported actions: ['convert', 'drive', 'read', 'sample', 'leak', 'activate']
2024-05-29 17:03:01 DEBUG       | CactiCache with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       |  | Class name aladdin_adder is not supported. Supported class names: ['cache']
2024-05-29 17:03:01 DEBUG       | CactiDRAM with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       |  | Class name aladdin_adder is not supported. Supported class names: ['DRAM']
2024-05-29 17:03:01 DEBUG       | CactiSRAM with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       |  | Class name aladdin_adder is not supported. Supported class names: ['SRAM']
2024-05-29 17:03:01 DEBUG       Why plug-ins did not estimate:
2024-05-29 17:03:01 DEBUG       | Library with accuracy 90% estimating accuracy: value=0.21, matching_attrs=3, log=['Scaling width from 32 to 16', 'Scaling global_cycle_seconds from 1e-9 to 1e-09']
2024-05-29 17:03:01 DEBUG       | DEPRECATED table-based-plug-ins. Use the Library plug-in instead. with accuracy 0% estimating accuracy: Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       | Aladdin_table with accuracy 0% estimating accuracy: Primitive class aladdin_adder is not supported. Supported classes are: ['regfile', 'SRAM', 'counter', 'comparator', 'crossbar', 'wire', 'FIFO', 'bitwise', 'intadder', 'intmultiplier', 'intmac', 'fpadder', 'fpmultiplier', 'fpmac', 'reg']
2024-05-29 17:03:01 DEBUG       | dummy_table with accuracy 0% estimating accuracy: Set attribute "technology" to -1 to use the dummy table
2024-05-29 17:03:01 DEBUG       | Neurosim Plug-In with accuracy 0% estimating accuracy: ERROR: NeuroSim estimator does not support aladdin_adder. Supported primitives are: ['array_row_drivers', 'array_col_drivers', 'array_adc', 'memory_cell', 'shift_add', 'intadder', 'intadder_tree', 'max_pool', 'mux', 'flip_flop', 'not_gate', 'nand_gate', 'nor_gate']
2024-05-29 17:03:01 DEBUG       | ADC Plug-In with accuracy 0% estimating accuracy: ADC Plug-In does not support aladdin_adder.add. Supported classes: ['adc', 'pim_adc', 'sar_adc', 'array_adc', 'pim_array_adc', 'cim_array_adc', 'cim_adc'], supported actions: ['convert', 'drive', 'read', 'sample', 'leak', 'activate']
2024-05-29 17:03:01 DEBUG       | CactiCache with accuracy 0% estimating accuracy: Class name aladdin_adder is not supported. Supported class names: ['cache']
2024-05-29 17:03:01 DEBUG       | CactiDRAM with accuracy 0% estimating accuracy: Class name aladdin_adder is not supported. Supported class names: ['DRAM']
2024-05-29 17:03:01 DEBUG       | CactiSRAM with accuracy 0% estimating accuracy: Class name aladdin_adder is not supported. Supported class names: ['SRAM']
2024-05-29 17:03:01 INFO        
2024-05-29 17:03:01 INFO        ENERGY ESTIMATION for aladdin_multiplier(width=8, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1).multiply(global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2024-05-29 17:03:01 INFO        Library estimated 3.17p with accuracy 90%. Messages:
2024-05-29 17:03:01 INFO        | Found 1 entries for aladdin_multiplier.multiply.
2024-05-29 17:03:01 INFO        | Checking entry "{'technology': '45nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '12.68', 'area(um^2)': '6350', 'action': 'multiply', 'name': 'aladdin_multiplier', 'area_scale': 1, 'energy_scale': 1, 'n_instances': 1}
2024-05-29 17:03:01 INFO        | value=12.68, matching_attrs=3, log=['Scaling width from 32 to 8', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaled aladdin_multiplier.width from 32.0 to 8.0: 0.25x energy', 'Scaled aladdin_multiplier.global_cycle_seconds from 1e-09 to 1e-09: 1x energy', 'aladdin_multiplier energy has been scaled 0.25x']
2024-05-29 17:03:01 INFO        | Best-matching entry: {'technology': '45nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '12.68', 'area(um^2)': '6350', 'action': 'multiply', 'name': 'aladdin_multiplier', 'area_scale': 1, 'energy_scale': 1, 'n_instances': 1}
2024-05-29 17:03:01 INFO        | Scaling width from 32 to 8
2024-05-29 17:03:01 INFO        | Scaling global_cycle_seconds from 1e-9 to 1e-09
2024-05-29 17:03:01 INFO        | Scaled aladdin_multiplier.width from 32.0 to 8.0: 0.25x energy
2024-05-29 17:03:01 INFO        | Scaled aladdin_multiplier.global_cycle_seconds from 1e-09 to 1e-09: 1x energy
2024-05-29 17:03:01 INFO        | aladdin_multiplier energy has been scaled 0.25x
2024-05-29 17:03:01 DEBUG       Estimator logs:
2024-05-29 17:03:01 DEBUG       | Library with accuracy 90% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Found 1 entries for aladdin_multiplier.multiply.
2024-05-29 17:03:01 DEBUG       |  | Checking entry "{'technology': '45nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '12.68', 'area(um^2)': '6350', 'action': 'multiply', 'name': 'aladdin_multiplier', 'area_scale': 1, 'energy_scale': 1, 'n_instances': 1}
2024-05-29 17:03:01 DEBUG       |  | value=12.68, matching_attrs=3, log=['Scaling width from 32 to 8', 'Scaling global_cycle_seconds from 1e-9 to 1e-09']
2024-05-29 17:03:01 DEBUG       | DEPRECATED table-based-plug-ins. Use the Library plug-in instead. with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       | Aladdin_table with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       |  | Primitive class aladdin_multiplier is not supported. Supported classes are: ['regfile', 'SRAM', 'counter', 'comparator', 'crossbar', 'wire', 'FIFO', 'bitwise', 'intadder', 'intmultiplier', 'intmac', 'fpadder', 'fpmultiplier', 'fpmac', 'reg']
2024-05-29 17:03:01 DEBUG       | dummy_table with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       |  | Set attribute "technology" to -1 to use the dummy table
2024-05-29 17:03:01 DEBUG       | Neurosim Plug-In with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       |  | ERROR: NeuroSim estimator does not support aladdin_multiplier. Supported primitives are: ['array_row_drivers', 'array_col_drivers', 'array_adc', 'memory_cell', 'shift_add', 'intadder', 'intadder_tree', 'max_pool', 'mux', 'flip_flop', 'not_gate', 'nand_gate', 'nor_gate']
2024-05-29 17:03:01 DEBUG       | ADC Plug-In with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       |  | ADC Plug-In does not support aladdin_multiplier.multiply. Supported classes: ['adc', 'pim_adc', 'sar_adc', 'array_adc', 'pim_array_adc', 'cim_array_adc', 'cim_adc'], supported actions: ['convert', 'drive', 'read', 'sample', 'leak', 'activate']
2024-05-29 17:03:01 DEBUG       | CactiCache with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       |  | Class name aladdin_multiplier is not supported. Supported class names: ['cache']
2024-05-29 17:03:01 DEBUG       | CactiDRAM with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       |  | Class name aladdin_multiplier is not supported. Supported class names: ['DRAM']
2024-05-29 17:03:01 DEBUG       | CactiSRAM with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       |  | Class name aladdin_multiplier is not supported. Supported class names: ['SRAM']
2024-05-29 17:03:01 DEBUG       Why plug-ins did not estimate:
2024-05-29 17:03:01 DEBUG       | Library with accuracy 90% estimating accuracy: value=12.68, matching_attrs=3, log=['Scaling width from 32 to 8', 'Scaling global_cycle_seconds from 1e-9 to 1e-09']
2024-05-29 17:03:01 DEBUG       | DEPRECATED table-based-plug-ins. Use the Library plug-in instead. with accuracy 0% estimating accuracy: Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       | Aladdin_table with accuracy 0% estimating accuracy: Primitive class aladdin_multiplier is not supported. Supported classes are: ['regfile', 'SRAM', 'counter', 'comparator', 'crossbar', 'wire', 'FIFO', 'bitwise', 'intadder', 'intmultiplier', 'intmac', 'fpadder', 'fpmultiplier', 'fpmac', 'reg']
2024-05-29 17:03:01 DEBUG       | dummy_table with accuracy 0% estimating accuracy: Set attribute "technology" to -1 to use the dummy table
2024-05-29 17:03:01 DEBUG       | Neurosim Plug-In with accuracy 0% estimating accuracy: ERROR: NeuroSim estimator does not support aladdin_multiplier. Supported primitives are: ['array_row_drivers', 'array_col_drivers', 'array_adc', 'memory_cell', 'shift_add', 'intadder', 'intadder_tree', 'max_pool', 'mux', 'flip_flop', 'not_gate', 'nand_gate', 'nor_gate']
2024-05-29 17:03:01 DEBUG       | ADC Plug-In with accuracy 0% estimating accuracy: ADC Plug-In does not support aladdin_multiplier.multiply. Supported classes: ['adc', 'pim_adc', 'sar_adc', 'array_adc', 'pim_array_adc', 'cim_array_adc', 'cim_adc'], supported actions: ['convert', 'drive', 'read', 'sample', 'leak', 'activate']
2024-05-29 17:03:01 DEBUG       | CactiCache with accuracy 0% estimating accuracy: Class name aladdin_multiplier is not supported. Supported class names: ['cache']
2024-05-29 17:03:01 DEBUG       | CactiDRAM with accuracy 0% estimating accuracy: Class name aladdin_multiplier is not supported. Supported class names: ['DRAM']
2024-05-29 17:03:01 DEBUG       | CactiSRAM with accuracy 0% estimating accuracy: Class name aladdin_multiplier is not supported. Supported class names: ['SRAM']
2024-05-29 17:03:01 WARNING     No action counts are specified as yaml input
2024-05-29 17:03:01 INFO        
2024-05-29 17:03:01 INFO        AREA ESTIMATION for DRAM(type=LPDDR4, width=64, datawidth=8, has_power_gating=False, n_banks=2, cluster_size=1, reduction_supported=True, multiple_buffering=1, min_utilization=0, allow_overbooking=False, meshX=1, meshY=1, version=0.4, technology=45nm, global_cycle_seconds=1e-09, DATAWIDTH=8, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1)
2024-05-29 17:03:01 INFO        CactiDRAM estimated 0 with accuracy 80%. Messages:
2024-05-29 17:03:01 INFO        | Unused arguments (datawidth, has_power_gating, n_banks, cluster_size, reduction_supported, multiple_buffering, min_utilization, allow_overbooking, meshX, meshY, version, technology, global_cycle_seconds, DATAWIDTH, action_latency_cycles, cycle_seconds, n_instances) provided for DRAM.__init__. Arguments used: (type, width)
2024-05-29 17:03:01 INFO        | Multiplying by n_instances 1
2024-05-29 17:03:01 DEBUG       Why plug-ins did not estimate:
2024-05-29 17:03:01 DEBUG       | CactiDRAM with accuracy 80% estimating accuracy: No messages found.
2024-05-29 17:03:01 DEBUG       | DEPRECATED table-based-plug-ins. Use the Library plug-in instead. with accuracy 0% estimating accuracy: Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       | Aladdin_table with accuracy 0% estimating accuracy: Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       | dummy_table with accuracy 0% estimating accuracy: Set attribute "technology" to -1 to use the dummy table
2024-05-29 17:03:01 DEBUG       | Neurosim Plug-In with accuracy 0% estimating accuracy: ERROR: NeuroSim estimator does not support dram. Supported primitives are: ['array_row_drivers', 'array_col_drivers', 'array_adc', 'memory_cell', 'shift_add', 'intadder', 'intadder_tree', 'max_pool', 'mux', 'flip_flop', 'not_gate', 'nand_gate', 'nor_gate']
2024-05-29 17:03:01 DEBUG       | Library with accuracy 0% estimating accuracy: ValueError: Could not find area for dram
2024-05-29 17:03:01 DEBUG       | ADC Plug-In with accuracy 0% estimating accuracy: ADC Plug-In does not support DRAM.None. Supported classes: ['adc', 'pim_adc', 'sar_adc', 'array_adc', 'pim_array_adc', 'cim_array_adc', 'cim_adc'].
2024-05-29 17:03:01 DEBUG       | CactiCache with accuracy 0% estimating accuracy: Class name DRAM is not supported. Supported class names: ['cache']
2024-05-29 17:03:01 DEBUG       | CactiSRAM with accuracy 0% estimating accuracy: Class name DRAM is not supported. Supported class names: ['SRAM']
2024-05-29 17:03:01 INFO        
2024-05-29 17:03:01 INFO        AREA ESTIMATION for SRAM(depth=512, width=128, datawidth=8, has_power_gating=False, n_banks=2, cluster_size=1, reduction_supported=True, multiple_buffering=1, min_utilization=0, allow_overbooking=False, meshX=1, meshY=1, version=0.4, technology=45nm, global_cycle_seconds=1e-09, DATAWIDTH=8, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1)
2024-05-29 17:03:01 INFO        CactiSRAM estimated 4.36084e-08 with accuracy 80%. Messages:
2024-05-29 17:03:01 INFO        | Unused arguments (datawidth, has_power_gating, cluster_size, reduction_supported, multiple_buffering, min_utilization, allow_overbooking, meshX, meshY, version, global_cycle_seconds, DATAWIDTH, action_latency_cycles, cycle_seconds, n_instances) provided for SRAM.__init__. Arguments used: (depth, width, n_banks, technology)
2024-05-29 17:03:01 INFO        | Calling CACTI with cache_size=8192 n_rw_ports=1 block_size=16 tech_node_um=0.045 n_banks=2 tag_size=0 associativity=1
2024-05-29 17:03:01 INFO        | Calling CACTI with input path /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp4neel843
2024-05-29 17:03:01 INFO        | CACTI output will be written to /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp5ar5ag6a
2024-05-29 17:03:01 INFO        | CACTI executable not found at /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti/cacti
2024-05-29 17:03:01 INFO        | Calling: cd /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in ; ./cacti -infile /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp4neel843 >> /home/tanner/research/cimloop/venv/share/accelergy/estimation_plug_ins/accelergy-cacti-plug-in/cacti_inputs_outputs/tmp5ar5ag6a 2>&1
2024-05-29 17:03:01 INFO        | Cache bandwidth: 32.0 bits/cycle
2024-05-29 17:03:01 INFO        | Cache bandwidth: 331.75576555234744 bits/second
2024-05-29 17:03:01 INFO        | Multiplying by n_instances 1
2024-05-29 17:03:01 DEBUG       Why plug-ins did not estimate:
2024-05-29 17:03:01 DEBUG       | CactiSRAM with accuracy 80% estimating accuracy: No messages found.
2024-05-29 17:03:01 DEBUG       | DEPRECATED table-based-plug-ins. Use the Library plug-in instead. with accuracy 0% estimating accuracy: Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       | Aladdin_table with accuracy 0% estimating accuracy: Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       | dummy_table with accuracy 0% estimating accuracy: Set attribute "technology" to -1 to use the dummy table
2024-05-29 17:03:01 DEBUG       | Neurosim Plug-In with accuracy 0% estimating accuracy: ERROR: NeuroSim estimator does not support sram. Supported primitives are: ['array_row_drivers', 'array_col_drivers', 'array_adc', 'memory_cell', 'shift_add', 'intadder', 'intadder_tree', 'max_pool', 'mux', 'flip_flop', 'not_gate', 'nand_gate', 'nor_gate']
2024-05-29 17:03:01 DEBUG       | Library with accuracy 0% estimating accuracy: ValueError: Could not find area for sram
2024-05-29 17:03:01 DEBUG       | ADC Plug-In with accuracy 0% estimating accuracy: ADC Plug-In does not support SRAM.None. Supported classes: ['adc', 'pim_adc', 'sar_adc', 'array_adc', 'pim_array_adc', 'cim_array_adc', 'cim_adc'].
2024-05-29 17:03:01 DEBUG       | CactiCache with accuracy 0% estimating accuracy: Class name SRAM is not supported. Supported class names: ['cache']
2024-05-29 17:03:01 DEBUG       | CactiDRAM with accuracy 0% estimating accuracy: Class name SRAM is not supported. Supported class names: ['DRAM']
2024-05-29 17:03:01 INFO        
2024-05-29 17:03:01 INFO        AREA ESTIMATION for dummy_storage(width=1, depth=1, datawidth=1, technology=-1, has_power_gating=False, n_banks=2, cluster_size=1, reduction_supported=True, multiple_buffering=1, min_utilization=0, allow_overbooking=False, meshX=1, meshY=1, version=0.4, global_cycle_seconds=1e-09, DATAWIDTH=8, action_latency_cycles=1, cycle_seconds=1e-09, n_instances=1)
2024-05-29 17:03:01 INFO        dummy_table estimated 1u^2 with accuracy 100%. Messages:
2024-05-29 17:03:01 INFO        | Multiplying by n_instances 1
2024-05-29 17:03:01 DEBUG       Why plug-ins did not estimate:
2024-05-29 17:03:01 DEBUG       | dummy_table with accuracy 100% estimating accuracy: No messages found.
2024-05-29 17:03:01 DEBUG       | Library with accuracy 90% estimating accuracy: value=0.0, matching_attrs=2, log=['Scaling global_cycle_seconds from 1e-9 to 1e-09']
2024-05-29 17:03:01 DEBUG       | DEPRECATED table-based-plug-ins. Use the Library plug-in instead. with accuracy 0% estimating accuracy: Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       | Aladdin_table with accuracy 0% estimating accuracy: Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       | Neurosim Plug-In with accuracy 0% estimating accuracy: ERROR: NeuroSim estimator does not support dummy_storage. Supported primitives are: ['array_row_drivers', 'array_col_drivers', 'array_adc', 'memory_cell', 'shift_add', 'intadder', 'intadder_tree', 'max_pool', 'mux', 'flip_flop', 'not_gate', 'nand_gate', 'nor_gate']
2024-05-29 17:03:01 DEBUG       | ADC Plug-In with accuracy 0% estimating accuracy: ADC Plug-In does not support dummy_storage.None. Supported classes: ['adc', 'pim_adc', 'sar_adc', 'array_adc', 'pim_array_adc', 'cim_array_adc', 'cim_adc'].
2024-05-29 17:03:01 DEBUG       | CactiCache with accuracy 0% estimating accuracy: Class name dummy_storage is not supported. Supported class names: ['cache']
2024-05-29 17:03:01 DEBUG       | CactiDRAM with accuracy 0% estimating accuracy: Class name dummy_storage is not supported. Supported class names: ['DRAM']
2024-05-29 17:03:01 DEBUG       | CactiSRAM with accuracy 0% estimating accuracy: Class name dummy_storage is not supported. Supported class names: ['SRAM']
2024-05-29 17:03:01 INFO        
2024-05-29 17:03:01 INFO        AREA ESTIMATION for aladdin_adder(width=16, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2024-05-29 17:03:01 INFO        Library estimated 139.0u^2 with accuracy 90%. Messages:
2024-05-29 17:03:01 INFO        | Found 5 entries for aladdin_adder.
2024-05-29 17:03:01 INFO        | Checking entry "{'technology': '45nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0.21', 'area': '2.78E+02', 'action': 'add', 'name': 'aladdin_adder', 'area_scale': 1, 'energy_scale': 1, 'n_instances': 1}
2024-05-29 17:03:01 INFO        | value=278.0, matching_attrs=3, log=['Scaling width from 32 to 16', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaled aladdin_adder.width from 32.0 to 16.0: 0.5x area', 'Scaled aladdin_adder.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'aladdin_adder area has been scaled 0.5x']
2024-05-29 17:03:01 INFO        | Checking entry "{'technology': '45nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0.21', 'area': '2.78E+02', 'action': 'read', 'name': 'aladdin_adder', 'area_scale': 1, 'energy_scale': 1, 'n_instances': 1}
2024-05-29 17:03:01 INFO        | value=278.0, matching_attrs=3, log=['Scaling width from 32 to 16', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaled aladdin_adder.width from 32.0 to 16.0: 0.5x area', 'Scaled aladdin_adder.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'aladdin_adder area has been scaled 0.5x']
2024-05-29 17:03:01 INFO        | Checking entry "{'technology': '45nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0.0024', 'area': '2.78E+02', 'action': 'leak', 'name': 'aladdin_adder', 'area_scale': 1, 'energy_scale': 1, 'n_instances': 1}
2024-05-29 17:03:01 INFO        | value=278.0, matching_attrs=3, log=['Scaling width from 32 to 16', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaled aladdin_adder.width from 32.0 to 16.0: 0.5x area', 'Scaled aladdin_adder.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'aladdin_adder area has been scaled 0.5x']
2024-05-29 17:03:01 INFO        | Checking entry "{'technology': '45nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0', 'area': '2.78E+02', 'action': 'update', 'name': 'aladdin_adder', 'area_scale': 1, 'energy_scale': 1, 'n_instances': 1}
2024-05-29 17:03:01 INFO        | value=278.0, matching_attrs=3, log=['Scaling width from 32 to 16', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaled aladdin_adder.width from 32.0 to 16.0: 0.5x area', 'Scaled aladdin_adder.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'aladdin_adder area has been scaled 0.5x']
2024-05-29 17:03:01 INFO        | Checking entry "{'technology': '45nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0', 'area': '2.78E+02', 'action': 'write', 'name': 'aladdin_adder', 'area_scale': 1, 'energy_scale': 1, 'n_instances': 1}
2024-05-29 17:03:01 INFO        | value=278.0, matching_attrs=3, log=['Scaling width from 32 to 16', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaled aladdin_adder.width from 32.0 to 16.0: 0.5x area', 'Scaled aladdin_adder.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'aladdin_adder area has been scaled 0.5x']
2024-05-29 17:03:01 INFO        | Best-matching entry: {'technology': '45nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0.21', 'area': '2.78E+02', 'action': 'add', 'name': 'aladdin_adder', 'area_scale': 1, 'energy_scale': 1, 'n_instances': 1}
2024-05-29 17:03:01 INFO        | Scaling width from 32 to 16
2024-05-29 17:03:01 INFO        | Scaling global_cycle_seconds from 1e-9 to 1e-09
2024-05-29 17:03:01 INFO        | Scaled aladdin_adder.width from 32.0 to 16.0: 0.5x area
2024-05-29 17:03:01 INFO        | Scaled aladdin_adder.global_cycle_seconds from 1e-09 to 1e-09: 1x area
2024-05-29 17:03:01 INFO        | aladdin_adder area has been scaled 0.5x
2024-05-29 17:03:01 INFO        | Multiplying by n_instances 1
2024-05-29 17:03:01 DEBUG       Estimator logs:
2024-05-29 17:03:01 DEBUG       | Library with accuracy 90% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Found 5 entries for aladdin_adder.
2024-05-29 17:03:01 DEBUG       |  | Checking entry "{'technology': '45nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0.21', 'area': '2.78E+02', 'action': 'add', 'name': 'aladdin_adder', 'area_scale': 1, 'energy_scale': 1, 'n_instances': 1}
2024-05-29 17:03:01 DEBUG       |  | value=278.0, matching_attrs=3, log=['Scaling width from 32 to 16', 'Scaling global_cycle_seconds from 1e-9 to 1e-09']
2024-05-29 17:03:01 DEBUG       |  | Checking entry "{'technology': '45nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0.21', 'area': '2.78E+02', 'action': 'read', 'name': 'aladdin_adder', 'area_scale': 1, 'energy_scale': 1, 'n_instances': 1}
2024-05-29 17:03:01 DEBUG       |  | value=278.0, matching_attrs=3, log=['Scaling width from 32 to 16', 'Scaling global_cycle_seconds from 1e-9 to 1e-09']
2024-05-29 17:03:01 DEBUG       |  | Checking entry "{'technology': '45nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0.0024', 'area': '2.78E+02', 'action': 'leak', 'name': 'aladdin_adder', 'area_scale': 1, 'energy_scale': 1, 'n_instances': 1}
2024-05-29 17:03:01 DEBUG       |  | value=278.0, matching_attrs=3, log=['Scaling width from 32 to 16', 'Scaling global_cycle_seconds from 1e-9 to 1e-09']
2024-05-29 17:03:01 DEBUG       |  | Checking entry "{'technology': '45nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0', 'area': '2.78E+02', 'action': 'update', 'name': 'aladdin_adder', 'area_scale': 1, 'energy_scale': 1, 'n_instances': 1}
2024-05-29 17:03:01 DEBUG       |  | value=278.0, matching_attrs=3, log=['Scaling width from 32 to 16', 'Scaling global_cycle_seconds from 1e-9 to 1e-09']
2024-05-29 17:03:01 DEBUG       |  | Checking entry "{'technology': '45nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'energy': '0', 'area': '2.78E+02', 'action': 'write', 'name': 'aladdin_adder', 'area_scale': 1, 'energy_scale': 1, 'n_instances': 1}
2024-05-29 17:03:01 DEBUG       |  | value=278.0, matching_attrs=3, log=['Scaling width from 32 to 16', 'Scaling global_cycle_seconds from 1e-9 to 1e-09']
2024-05-29 17:03:01 DEBUG       | DEPRECATED table-based-plug-ins. Use the Library plug-in instead. with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       | Aladdin_table with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       | dummy_table with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       |  | Set attribute "technology" to -1 to use the dummy table
2024-05-29 17:03:01 DEBUG       | Neurosim Plug-In with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       |  | ERROR: NeuroSim estimator does not support aladdin_adder. Supported primitives are: ['array_row_drivers', 'array_col_drivers', 'array_adc', 'memory_cell', 'shift_add', 'intadder', 'intadder_tree', 'max_pool', 'mux', 'flip_flop', 'not_gate', 'nand_gate', 'nor_gate']
2024-05-29 17:03:01 DEBUG       | ADC Plug-In with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       |  | ADC Plug-In does not support aladdin_adder.None. Supported classes: ['adc', 'pim_adc', 'sar_adc', 'array_adc', 'pim_array_adc', 'cim_array_adc', 'cim_adc'].
2024-05-29 17:03:01 DEBUG       | CactiCache with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       |  | Class name aladdin_adder is not supported. Supported class names: ['cache']
2024-05-29 17:03:01 DEBUG       | CactiDRAM with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       |  | Class name aladdin_adder is not supported. Supported class names: ['DRAM']
2024-05-29 17:03:01 DEBUG       | CactiSRAM with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       |  | Class name aladdin_adder is not supported. Supported class names: ['SRAM']
2024-05-29 17:03:01 DEBUG       Why plug-ins did not estimate:
2024-05-29 17:03:01 DEBUG       | Library with accuracy 90% estimating accuracy: value=278.0, matching_attrs=3, log=['Scaling width from 32 to 16', 'Scaling global_cycle_seconds from 1e-9 to 1e-09']
2024-05-29 17:03:01 DEBUG       | DEPRECATED table-based-plug-ins. Use the Library plug-in instead. with accuracy 0% estimating accuracy: Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       | Aladdin_table with accuracy 0% estimating accuracy: Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       | dummy_table with accuracy 0% estimating accuracy: Set attribute "technology" to -1 to use the dummy table
2024-05-29 17:03:01 DEBUG       | Neurosim Plug-In with accuracy 0% estimating accuracy: ERROR: NeuroSim estimator does not support aladdin_adder. Supported primitives are: ['array_row_drivers', 'array_col_drivers', 'array_adc', 'memory_cell', 'shift_add', 'intadder', 'intadder_tree', 'max_pool', 'mux', 'flip_flop', 'not_gate', 'nand_gate', 'nor_gate']
2024-05-29 17:03:01 DEBUG       | ADC Plug-In with accuracy 0% estimating accuracy: ADC Plug-In does not support aladdin_adder.None. Supported classes: ['adc', 'pim_adc', 'sar_adc', 'array_adc', 'pim_array_adc', 'cim_array_adc', 'cim_adc'].
2024-05-29 17:03:01 DEBUG       | CactiCache with accuracy 0% estimating accuracy: Class name aladdin_adder is not supported. Supported class names: ['cache']
2024-05-29 17:03:01 DEBUG       | CactiDRAM with accuracy 0% estimating accuracy: Class name aladdin_adder is not supported. Supported class names: ['DRAM']
2024-05-29 17:03:01 DEBUG       | CactiSRAM with accuracy 0% estimating accuracy: Class name aladdin_adder is not supported. Supported class names: ['SRAM']
2024-05-29 17:03:01 INFO        
2024-05-29 17:03:01 INFO        AREA ESTIMATION for aladdin_multiplier(width=8, global_cycle_seconds=1e-09, action_latency_cycles=1, cycle_seconds=1e-09, technology=45nm, n_instances=1)
2024-05-29 17:03:01 INFO        Library estimated 1587.5u^2 with accuracy 90%. Messages:
2024-05-29 17:03:01 INFO        | Found 5 entries for aladdin_multiplier.
2024-05-29 17:03:01 INFO        | Checking entry "{'technology': '45nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '12.68', 'area(um^2)': '6350', 'action': 'multiply', 'name': 'aladdin_multiplier', 'area_scale': 1, 'energy_scale': 1, 'n_instances': 1}
2024-05-29 17:03:01 INFO        | value=6350.0, matching_attrs=3, log=['Scaling width from 32 to 8', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaled aladdin_multiplier.width from 32.0 to 8.0: 0.25x area', 'Scaled aladdin_multiplier.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'aladdin_multiplier area has been scaled 0.25x']
2024-05-29 17:03:01 INFO        | Checking entry "{'technology': '45nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '12.68', 'area(um^2)': '6350', 'action': 'read', 'name': 'aladdin_multiplier', 'area_scale': 1, 'energy_scale': 1, 'n_instances': 1}
2024-05-29 17:03:01 INFO        | value=6350.0, matching_attrs=3, log=['Scaling width from 32 to 8', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaled aladdin_multiplier.width from 32.0 to 8.0: 0.25x area', 'Scaled aladdin_multiplier.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'aladdin_multiplier area has been scaled 0.25x']
2024-05-29 17:03:01 INFO        | Checking entry "{'technology': '45nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '0.08', 'area(um^2)': '6350', 'action': 'leak', 'name': 'aladdin_multiplier', 'area_scale': 1, 'energy_scale': 1, 'n_instances': 1}
2024-05-29 17:03:01 INFO        | value=6350.0, matching_attrs=3, log=['Scaling width from 32 to 8', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaled aladdin_multiplier.width from 32.0 to 8.0: 0.25x area', 'Scaled aladdin_multiplier.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'aladdin_multiplier area has been scaled 0.25x']
2024-05-29 17:03:01 INFO        | Checking entry "{'technology': '45nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '0', 'area(um^2)': '6350', 'action': 'update', 'name': 'aladdin_multiplier', 'area_scale': 1, 'energy_scale': 1, 'n_instances': 1}
2024-05-29 17:03:01 INFO        | value=6350.0, matching_attrs=3, log=['Scaling width from 32 to 8', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaled aladdin_multiplier.width from 32.0 to 8.0: 0.25x area', 'Scaled aladdin_multiplier.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'aladdin_multiplier area has been scaled 0.25x']
2024-05-29 17:03:01 INFO        | Checking entry "{'technology': '45nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '0', 'area(um^2)': '6350', 'action': 'write', 'name': 'aladdin_multiplier', 'area_scale': 1, 'energy_scale': 1, 'n_instances': 1}
2024-05-29 17:03:01 INFO        | value=6350.0, matching_attrs=3, log=['Scaling width from 32 to 8', 'Scaling global_cycle_seconds from 1e-9 to 1e-09', 'Scaled aladdin_multiplier.width from 32.0 to 8.0: 0.25x area', 'Scaled aladdin_multiplier.global_cycle_seconds from 1e-09 to 1e-09: 1x area', 'aladdin_multiplier area has been scaled 0.25x']
2024-05-29 17:03:01 INFO        | Best-matching entry: {'technology': '45nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '12.68', 'area(um^2)': '6350', 'action': 'multiply', 'name': 'aladdin_multiplier', 'area_scale': 1, 'energy_scale': 1, 'n_instances': 1}
2024-05-29 17:03:01 INFO        | Scaling width from 32 to 8
2024-05-29 17:03:01 INFO        | Scaling global_cycle_seconds from 1e-9 to 1e-09
2024-05-29 17:03:01 INFO        | Scaled aladdin_multiplier.width from 32.0 to 8.0: 0.25x area
2024-05-29 17:03:01 INFO        | Scaled aladdin_multiplier.global_cycle_seconds from 1e-09 to 1e-09: 1x area
2024-05-29 17:03:01 INFO        | aladdin_multiplier area has been scaled 0.25x
2024-05-29 17:03:01 INFO        | Multiplying by n_instances 1
2024-05-29 17:03:01 DEBUG       Estimator logs:
2024-05-29 17:03:01 DEBUG       | Library with accuracy 90% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Found 5 entries for aladdin_multiplier.
2024-05-29 17:03:01 DEBUG       |  | Checking entry "{'technology': '45nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '12.68', 'area(um^2)': '6350', 'action': 'multiply', 'name': 'aladdin_multiplier', 'area_scale': 1, 'energy_scale': 1, 'n_instances': 1}
2024-05-29 17:03:01 DEBUG       |  | value=6350.0, matching_attrs=3, log=['Scaling width from 32 to 8', 'Scaling global_cycle_seconds from 1e-9 to 1e-09']
2024-05-29 17:03:01 DEBUG       |  | Checking entry "{'technology': '45nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '12.68', 'area(um^2)': '6350', 'action': 'read', 'name': 'aladdin_multiplier', 'area_scale': 1, 'energy_scale': 1, 'n_instances': 1}
2024-05-29 17:03:01 DEBUG       |  | value=6350.0, matching_attrs=3, log=['Scaling width from 32 to 8', 'Scaling global_cycle_seconds from 1e-9 to 1e-09']
2024-05-29 17:03:01 DEBUG       |  | Checking entry "{'technology': '45nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '0.08', 'area(um^2)': '6350', 'action': 'leak', 'name': 'aladdin_multiplier', 'area_scale': 1, 'energy_scale': 1, 'n_instances': 1}
2024-05-29 17:03:01 DEBUG       |  | value=6350.0, matching_attrs=3, log=['Scaling width from 32 to 8', 'Scaling global_cycle_seconds from 1e-9 to 1e-09']
2024-05-29 17:03:01 DEBUG       |  | Checking entry "{'technology': '45nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '0', 'area(um^2)': '6350', 'action': 'update', 'name': 'aladdin_multiplier', 'area_scale': 1, 'energy_scale': 1, 'n_instances': 1}
2024-05-29 17:03:01 DEBUG       |  | value=6350.0, matching_attrs=3, log=['Scaling width from 32 to 8', 'Scaling global_cycle_seconds from 1e-9 to 1e-09']
2024-05-29 17:03:01 DEBUG       |  | Checking entry "{'technology': '45nm', 'global_cycle_seconds': '1e-9', 'width|datawidth': '32', 'width_a|datawidth_a': '32', 'width_b|datawidth_b': '32', 'energy(pJ)': '0', 'area(um^2)': '6350', 'action': 'write', 'name': 'aladdin_multiplier', 'area_scale': 1, 'energy_scale': 1, 'n_instances': 1}
2024-05-29 17:03:01 DEBUG       |  | value=6350.0, matching_attrs=3, log=['Scaling width from 32 to 8', 'Scaling global_cycle_seconds from 1e-9 to 1e-09']
2024-05-29 17:03:01 DEBUG       | DEPRECATED table-based-plug-ins. Use the Library plug-in instead. with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       | Aladdin_table with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       | dummy_table with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       |  | Set attribute "technology" to -1 to use the dummy table
2024-05-29 17:03:01 DEBUG       | Neurosim Plug-In with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       |  | ERROR: NeuroSim estimator does not support aladdin_multiplier. Supported primitives are: ['array_row_drivers', 'array_col_drivers', 'array_adc', 'memory_cell', 'shift_add', 'intadder', 'intadder_tree', 'max_pool', 'mux', 'flip_flop', 'not_gate', 'nand_gate', 'nor_gate']
2024-05-29 17:03:01 DEBUG       | ADC Plug-In with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       |  | ADC Plug-In does not support aladdin_multiplier.None. Supported classes: ['adc', 'pim_adc', 'sar_adc', 'array_adc', 'pim_array_adc', 'cim_array_adc', 'cim_adc'].
2024-05-29 17:03:01 DEBUG       | CactiCache with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       |  | Class name aladdin_multiplier is not supported. Supported class names: ['cache']
2024-05-29 17:03:01 DEBUG       | CactiDRAM with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       |  | Class name aladdin_multiplier is not supported. Supported class names: ['DRAM']
2024-05-29 17:03:01 DEBUG       | CactiSRAM with accuracy 0% estimating accuracy:
2024-05-29 17:03:01 DEBUG       |  | Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       |  | Class name aladdin_multiplier is not supported. Supported class names: ['SRAM']
2024-05-29 17:03:01 DEBUG       Why plug-ins did not estimate:
2024-05-29 17:03:01 DEBUG       | Library with accuracy 90% estimating accuracy: value=6350.0, matching_attrs=3, log=['Scaling width from 32 to 8', 'Scaling global_cycle_seconds from 1e-9 to 1e-09']
2024-05-29 17:03:01 DEBUG       | DEPRECATED table-based-plug-ins. Use the Library plug-in instead. with accuracy 0% estimating accuracy: Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       | Aladdin_table with accuracy 0% estimating accuracy: Accuracy is 0%. Not supported.
2024-05-29 17:03:01 DEBUG       | dummy_table with accuracy 0% estimating accuracy: Set attribute "technology" to -1 to use the dummy table
2024-05-29 17:03:01 DEBUG       | Neurosim Plug-In with accuracy 0% estimating accuracy: ERROR: NeuroSim estimator does not support aladdin_multiplier. Supported primitives are: ['array_row_drivers', 'array_col_drivers', 'array_adc', 'memory_cell', 'shift_add', 'intadder', 'intadder_tree', 'max_pool', 'mux', 'flip_flop', 'not_gate', 'nand_gate', 'nor_gate']
2024-05-29 17:03:01 DEBUG       | ADC Plug-In with accuracy 0% estimating accuracy: ADC Plug-In does not support aladdin_multiplier.None. Supported classes: ['adc', 'pim_adc', 'sar_adc', 'array_adc', 'pim_array_adc', 'cim_array_adc', 'cim_adc'].
2024-05-29 17:03:01 DEBUG       | CactiCache with accuracy 0% estimating accuracy: Class name aladdin_multiplier is not supported. Supported class names: ['cache']
2024-05-29 17:03:01 DEBUG       | CactiDRAM with accuracy 0% estimating accuracy: Class name aladdin_multiplier is not supported. Supported class names: ['DRAM']
2024-05-29 17:03:01 DEBUG       | CactiSRAM with accuracy 0% estimating accuracy: Class name aladdin_multiplier is not supported. Supported class names: ['SRAM']
2024-05-29 17:03:01 INFO        verbose flattened architecture is saved to:
2024-05-29 17:03:01 INFO        ./flattened_architecture_verbose.yaml
2024-05-29 17:03:01 INFO        energy reference table is saved to:
2024-05-29 17:03:01 INFO        ./ERT.yaml
2024-05-29 17:03:01 INFO        verbose energy reference table summary is saved to:
2024-05-29 17:03:01 INFO        ./ERT_summary_verbose.yaml
2024-05-29 17:03:01 WARNING     no runtime energy estimations are generated... not generating energy_estimation.yaml
2024-05-29 17:03:01 INFO        area reference table is saved to:
2024-05-29 17:03:01 INFO        ./ART.yaml
2024-05-29 17:03:01 INFO        verbose area reference table summary is saved to:
2024-05-29 17:03:01 INFO        ./ART_summary_verbose.yaml
